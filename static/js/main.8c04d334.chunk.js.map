{"version":3,"sources":["images/child.png","images/family.png","images/gameImages/memoryGame.svg","images/gameImages/puzzleGame.svg","images/gameImages/quizGame.svg","images/logo.svg","images/earthNav.svg","images/recycleResourceSetion.svg","images/earthResourceSetion.svg","images/pollutionResourceSetion.svg","images/puzzleGame/habitat.jpg","images/puzzleGame/conservation.jpg","images/puzzleGame/holdingPlant.jpg","images/puzzleGame/planting.jpg","images/memoryGame/acidRain.svg","images/memoryGame/airPollution.svg","images/memoryGame/alternateEnergy.svg","images/memoryGame/chemicalWaste.svg","images/memoryGame/deforestation.svg","images/memoryGame/globalWarming.svg","images/memoryGame/greenhouseEffect.svg","images/memoryGame/littering.svg","images/memoryGame/meltingIceCaps.svg","images/memoryGame/ozoneHole.svg","images/memoryGame/recycle.svg","images/memoryGame/waterPollution.svg","images/memoryGameFrontImage.png","images/memoryGameSuccessSymbol.svg","images/world.svg","images/aboutPage/kid-1.png","images/aboutPage/kid-2.png","images/child_2.png","images/ourClimateChange.png","images/resourcesForEducation.png","images/whoCausesClimate.png","firebaseConfig.js","auth/authContext.jsx","components/Navbar/index.jsx","components/Footer/index.jsx","components/ResourcesSection/index.jsx","components/HomePageHeaderSection/index.jsx","components/TwitterImage/index.jsx","components/StayUpTodate/index.jsx","components/BottomCurve/index.jsx","components/SpreadTheWordButton/index.jsx","components/GamesCarousel/settings.jsx","components/GamesCarousel/index.jsx","containers/Home/index.jsx","components/memorygame/shuffle.jsx","components/PuzzleGrid/index.jsx","components/PuzzleGameContainer/index.jsx","components/PuzzlePageContent/index.jsx","containers/PuzzlePage/index.jsx","components/memorygame/confettiConfig.js","components/memorygame/MemoryGameFactList/index.jsx","components/memorygame/memoryCardBackSideImages.jsx","components/memorygame/cardInitialStateGenerator.jsx","components/memorygame/gameHelpers.jsx","components/memorygame/MemoryGameScrollToFacts/index.jsx","components/memorygame/MemoryGameQuestionMarkIcon/index.jsx","components/memorygame/MemoryGameFlippableCard/index.jsx","components/memorygame/MemoryGameSuccessCard/index.jsx","components/memorygame/MemoryGameCards/index.jsx","components/memorygame/MemoryGameBoard/index.jsx","containers/MemoryGamePage/index.jsx","components/gamespage/GamesPageProgressSection/index.jsx","components/gamespage/GamesPageImageGrid/index.jsx","containers/GamesPage/index.jsx","components/MemberCard/index.jsx","components/TeamCards/index.jsx","containers/AboutPage/index.jsx","components/ContactUsHeaderSection/index.jsx","components/ContactUsForm/index.jsx","components/ContactUsBottom/index.jsx","containers/ContactPage/index.jsx","components/QuizGameApi/index.jsx","components/QuizGameQuestions/index.jsx","components/QuizGame/index.jsx","containers/QuizGamePage/index.jsx","components/Resource/index.jsx","containers/ResourcesPage/index.jsx","components/userauth/registerHelper.js","components/userauth/ErrorMessage/index.jsx","components/userauth/Login/index.jsx","components/userauth/Register/index.jsx","components/userauth/ResetPassword/index.jsx","containers/LoginRegister/index.jsx","App.jsx","serviceWorker.jsx","i18n.jsx","index.jsx"],"names":["module","exports","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","firebaseStorage","AuthContext","React","createContext","user","setUser","processAuth","a","firestore","doc","uid","get","firestoreResult","data","collection","set","fullname","displayName","age","userExperiencePoints","isLoggedin","email","AuthProvider","props","useState","useEffect","onAuthStateChanged","Provider","value","children","Navbar","t","useTranslation","useContext","navbarMenu","Item","to","href","onClick","e","preventDefault","signOut","languagesMenu","className","handleLanguageChange","lang","i18n","changeLanguage","isCurrentPath","path","window","location","pathname","justify","gutter","flex","overlay","icon","faBars","span","faGlobeAfrica","document","dir","src","logoImg","alt","LIGHT_GREEN_BACKGROUND_PAGES","Footer","curRoute","useLocation","style","backgroundColor","includes","globe","faFacebook","size","faInstagram","faYoutube","ResourcesSection","pollutionImg","earthImg","recycleImg","HomePageHeaderSection","currentLanguage","i18next","language","align","homePageHeaderImgLeft","homePageHeaderImgRight","offset","TwitterImage","target","rel","StayUpToDate","Title","Typography","twitterImages","returnObjects","map","page","xs","lg","key","BottomCurve","SpreadTheWordButton","sm","type","TwitterCircleFilled","settings","infinite","slidesToShow","speed","arrow","responsive","breakpoint","slidesToScroll","initialSlide","GAME_IMAGES","memoryGame","puzzleGame","quizGame","GamesCarousel","imgUrl","imgUrlParts","split","imageName","length","gameRoute","toLowerCase","gameTitle","Home","shuffle","arr","copyOfArr","i","j","Math","floor","random","PuzzleGrid","puzzleImage","currentPuzzleState","setCurrentPuzzleState","selectedTileId","setSelectedTileId","isSolved","setIsSolved","newTilesArray","tileId","newTile","id","selected","top","push","randomizedTilesArray","tilesGenerator","isCorrect","reduce","acc","currTile","tileCurrIndex","gridBody","swapTiles","tileId0","tileId1","newTiles","tileIndex0","findIndex","tile","tileIndex1","tile0","tile1","forEach","clickedTileId","clickedTileIndex","copyOfPuzzleState","handleClick","PUZZLE_IMAGE_POOL","habitatImg","conservationImg","holdingPlantImg","plantingImg","PuzzleGameContainer","currentImage","setCurrentImage","bordered","img","imgIndex","getAttribute","handleImageClick","PuzzlePageContent","Content","Layout","content","title","placement","QuestionCircleTwoTone","PuzzlePage","confettiConfig","angle","spread","startVelocity","elementCount","dragFriction","duration","stagger","width","height","perspective","colors","MemoryGameFactList","factListContent","facts","dataSource","renderItem","fact","link","phrase","CARD_BACKSIDE_IMAGES","acidRain","airPollution","alternateEnergy","chemicalWaste","deforestation","globalWarming","greenhouseEffect","littering","meltingIceCaps","ozoneHole","recycle","waterPollution","cardInitialStateGenerator","cardDataArr","numRequiredMatches","invariant","clonedCardData","clonedImgArr","cardStates","card","index","cardKey","imgSrc","imgNameParts","imgName","numSameCardKeysSoFar","filter","prevCardState","description","isFlipped","isMatched","imgKey","invertCardStateForKey","cardStateKey","targetCard","setCardStates","copyOfCardStates","targetIndex","cardState","targetCardState","Error","setTimeout","ScrollToFacts","smooth","QuestionMarkIcon","FlippableCard","targetState","selectedCards","setSelectedCards","clickedCardState","clickedCardIndex","state","some","selectedCard","prevState","questionMark","SuccessCard","memoryGameSuccessSymbol","GameCards","xxl","MemoryGameBoard","setFinishedCards","finishedCards","setIsGameCompleted","currLanguage","cardsDataArr","areCardsMatching","firstCard","every","matchedCard","unmatchedCard","MAX_MATCHES","Modal","success","pull","MemoryGamePage","isGameCompleted","active","config","md","xl","GRID_SPANS","currLevel","progressBar","nextLevel","previousReward","nextReward","ProgressSection","progressData","currentLevel","currentXP","percent","strokeColor","trailColor","strokeWidth","showInfo","prevRewardIcon","QuestionOutlined","GamesPageImageGrid","gameData","Meta","Card","gamePosters","Object","values","gameObj","route","hoverable","cover","GAME_SCREENSHOTS","GamesPage","gamePostersObj","gameScreenshotDir","screenshotDirParts","screenshotName","PLACEHOLDER_PROGRESS_DATA","worldIcon","MemberCard","name","role","bio","avatarUrl","linkedinUrl","githubUrl","shape","LinkedinFilled","GithubFilled","TeamCards","dataState","setDataState","fetchData","db","res","info","member","avatar","linkedin","github","AboutPage","illustrationStyling","flexDirection","kid0Img","kid1Img","ContactUsHeaderSection","ContactUsForm","message","formValue","setFormValue","isLoading","setIsLoading","handleChange","onSubmit","fetch","method","headers","body","keys","encodeURIComponent","join","then","catch","error","onChange","required","SyncOutlined","spin","ContactUsBottom","contactUsBottomImgLeft","contactUsBottomImgRight_0","contactUsBottomImgRight_1","ContactPage","fetchQuizQuestions","amount","difficulty","endpoint","json","results","question","answers","incorrect_answers","correct_answer","QuestionCard","answerChoices","questionNum","totalQuestions","dangerouslySetInnerHTML","__html","answer","DIFFICULTY","QuizGame","questions","setQuestions","currentQuestionNumber","setCurrentQuestionNumber","userAnswers","setUserAnswers","score","setScore","isGameStart","setIsGameStart","startQuiz","newQuestions","shouldStartGameAgain","isGameReady","isUserOnLastQuestion","TOTAL_QUESTIONS","isThereAnotherQuestion","userChosenAnswer","currentTarget","solutionAnswer","prev","answerObject","correctAnswer","nextQNum","QuizGamePage","handleDownloadFileFromFirebaseStorage","resource","storage","refFromURL","getDownloadURL","url","open","console","alert","Resource","pic","ResourcesPage","initResources","ourClimateChange","resourcesForEducation","whoCausesClimate","resources","validateEmail","test","createErrorClassName","ErrorMessage","Login","handleFacebookAuth","handleGoogleAuth","handleRegister","handlePasswordReset","password","loginCredentials","setLoginCredentials","newValues","errors","setErrors","noValidate","newErrors","trim","showIcon","Register","handleLogin","fullName","isAgreed","registerInformation","setRegisterInformation","termsOpen","setTermsOpen","handleOkTerms","handleCancelTerms","termsAndConditionsTranslation","visible","onOk","onCancel","footer","termAndCondition","checked","ResetPassword","passwordResetInfo","setPasswordResetInfo","withRouter","component","history","authAction","setAuthAction","setError","setMessage","loading","setLoading","resetErrorAndMessage","fetchAction","func","login","signInWithEmailAndPassword","passwordReset","sendPasswordResetEmail","loginWithFacebook","provider","FacebookAuthProvider","setCustomParameters","display","signInWithPopup","loginWithGoogle","GoogleAuthProvider","addScope","register","createUserWithEmailAndPassword","registeredUser","spinning","App","exact","About","LoginRegisterPage","ResourcePage","Boolean","hostname","match","en","translation","ar","tr","use","LanguageDetector","initReactI18next","init","fallbackLng","debug","interpolation","escapeValue","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8c04d334.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/child.36563237.png\";","module.exports = __webpack_public_path__ + \"static/media/family.6240610f.png\";","module.exports = __webpack_public_path__ + \"static/media/memoryGame.744f0822.svg\";","module.exports = __webpack_public_path__ + \"static/media/puzzleGame.2a47c028.svg\";","module.exports = __webpack_public_path__ + \"static/media/quizGame.5ce9871d.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.97df82e9.svg\";","module.exports = __webpack_public_path__ + \"static/media/earthNav.03d7ba71.svg\";","module.exports = __webpack_public_path__ + \"static/media/recycleResourceSetion.f641ade2.svg\";","module.exports = __webpack_public_path__ + \"static/media/earthResourceSetion.891171e5.svg\";","module.exports = __webpack_public_path__ + \"static/media/pollutionResourceSetion.4bf01605.svg\";","module.exports = __webpack_public_path__ + \"static/media/habitat.fe554827.jpg\";","module.exports = __webpack_public_path__ + \"static/media/conservation.4f5728e9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/holdingPlant.cba93ff5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/planting.8fc5b31e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/acidRain.d8b17089.svg\";","module.exports = __webpack_public_path__ + \"static/media/airPollution.d7becd29.svg\";","module.exports = __webpack_public_path__ + \"static/media/alternateEnergy.ac89569f.svg\";","module.exports = __webpack_public_path__ + \"static/media/chemicalWaste.d2727124.svg\";","module.exports = __webpack_public_path__ + \"static/media/deforestation.1ab5ad82.svg\";","module.exports = __webpack_public_path__ + \"static/media/globalWarming.312ff5f9.svg\";","module.exports = __webpack_public_path__ + \"static/media/greenhouseEffect.4069f247.svg\";","module.exports = __webpack_public_path__ + \"static/media/littering.0c231e9f.svg\";","module.exports = __webpack_public_path__ + \"static/media/meltingIceCaps.2b869fbf.svg\";","module.exports = __webpack_public_path__ + \"static/media/ozoneHole.74d9fde2.svg\";","module.exports = __webpack_public_path__ + \"static/media/recycle.2cc153f7.svg\";","module.exports = __webpack_public_path__ + \"static/media/waterPollution.996120b0.svg\";","module.exports = __webpack_public_path__ + \"static/media/memoryGameFrontImage.848f7863.png\";","module.exports = __webpack_public_path__ + \"static/media/memoryGameSuccessSymbol.6b7be6d2.svg\";","module.exports = __webpack_public_path__ + \"static/media/world.2b2233e0.svg\";","module.exports = __webpack_public_path__ + \"static/media/kid-1.1a5be797.png\";","module.exports = __webpack_public_path__ + \"static/media/kid-2.72fae50f.png\";","module.exports = __webpack_public_path__ + \"static/media/child_2.2766957a.png\";","module.exports = __webpack_public_path__ + \"static/media/ourClimateChange.d3303542.png\";","module.exports = __webpack_public_path__ + \"static/media/resourcesForEducation.f90af85d.png\";","module.exports = __webpack_public_path__ + \"static/media/whoCausesClimate.d72162da.png\";","import * as firebase from \"firebase\";\r\nimport \"firebase/database\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDJFjwL1UPdxhndd2GUh2J6KMZvuYHkQVc\",\r\n  authDomain: \"capstone-istanbul-juniper.firebaseapp.com\",\r\n  databaseURL: \"https://capstone-istanbul-juniper.firebaseio.com\",\r\n  projectId: \"capstone-istanbul-juniper\",\r\n  storageBucket: \"capstone-istanbul-juniper.appspot.com\",\r\n  messagingSenderId: \"1033960864371\",\r\n  appId: \"1:1033960864371:web:d298c334d19ce7fc960806\",\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const auth = firebase.auth();\r\nexport const firebaseStorage = firebase;\r\nexport default firebase.firestore();\r\n","import React, { useEffect, useState } from \"react\";\r\nimport firestore, { auth } from \"../firebaseConfig\";\r\n\r\nexport const AuthContext = React.createContext({\r\n  user: null,\r\n  setUser: null,\r\n});\r\n\r\nconst AuthProvider = (props) => {\r\n  const [user, setUser] = useState();\r\n\r\n  useEffect(() => {\r\n    auth.onAuthStateChanged((auth) => {\r\n      processAuth(auth, setUser);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, setUser }}>\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const processAuth = async (auth, setUser) => {\r\n  if (!auth) {\r\n    return setUser(null);\r\n  }\r\n  // A unique user ID, assigned to the requesting user, we're calling/maticing this ID from our server.\r\n  let firestoreResult = await firestore.doc(\"users/\" + auth.uid).get();\r\n  if (!firestoreResult.data()) {\r\n    await firestore.collection(\"users\").doc(auth.uid).set({\r\n      uid: auth.uid,\r\n      fullname: auth.displayName,\r\n      age: null,\r\n      userExperiencePoints: 0,\r\n    });\r\n    firestoreResult = await firestore.doc(\"users/\" + auth.uid).get();\r\n  }\r\n  const user = {\r\n    isLoggedin: true,\r\n    uid: auth.uid,\r\n    email: auth.email,\r\n    fullname: firestoreResult.data().fullname ?? auth.displayName,\r\n    age: firestoreResult.data().age ?? null,\r\n    userExperiencePoints: firestoreResult.data().userExperiencePoints ?? 0,\r\n  };\r\n  await setUser(user);\r\n};\r\n\r\nexport default AuthProvider;\r\n","import React, { useContext } from \"react\";\r\nimport \"./index.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Dropdown, Menu, Col, Row } from \"antd\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport i18n from \"i18next\";\r\nimport logoImg from \"./../../images/logo.svg\";\r\nimport { AuthContext } from \"../../auth/authContext\";\r\nimport { auth } from \"../../firebaseConfig\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faBars, faGlobeAfrica } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navbar = () => {\r\n  const { t } = useTranslation();\r\n  const { user } = useContext(AuthContext);\r\n  const navbarMenu = (\r\n    <Menu>\r\n      <Menu.Item>\r\n        <Link to=\"/\">{t(\"navbar.home\")}</Link>\r\n      </Menu.Item>\r\n      <Menu.Item>\r\n        <Link to=\"/about\">{t(\"navbar.about\")}</Link>\r\n      </Menu.Item>\r\n      <Menu.Item>\r\n        <Link to=\"/games\">{t(\"navbar.games\")}</Link>\r\n      </Menu.Item>\r\n      <Menu.Item>\r\n        <Link to=\"/resources\">{t(\"navbar.resources\")}</Link>\r\n      </Menu.Item>\r\n      <Menu.Item>\r\n        <Link to=\"/contact\">{t(\"navbar.contact\")}</Link>\r\n      </Menu.Item>\r\n      <Menu.Item>\r\n        {user && user.isLoggedin ? (\r\n          <a\r\n            href=\"/#\"\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              auth.signOut();\r\n            }}\r\n          >\r\n            Logout\r\n          </a>\r\n        ) : (\r\n          <Link to=\"/login\">{t(\"navbar.login\")}</Link>\r\n        )}\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n\r\n  const languagesMenu = (\r\n    <Menu>\r\n      <Menu.Item\r\n        className=\"navbar__languageContainer-btn\"\r\n        onClick={(e) => handleLanguageChange(\"en\")}\r\n      >\r\n        <p>EN</p>\r\n      </Menu.Item>\r\n      <Menu.Item\r\n        className=\"navbar__languageContainer-btn\"\r\n        onClick={(e) => handleLanguageChange(\"tr\")}\r\n      >\r\n        <p>TR</p>\r\n      </Menu.Item>\r\n      <Menu.Item\r\n        className=\"navbar__languageContainer-btn\"\r\n        onClick={(e) => handleLanguageChange(\"ar\")}\r\n      >\r\n        <p>AR</p>\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n\r\n  const handleLanguageChange = (lang) => {\r\n    i18n.changeLanguage(lang);\r\n  };\r\n\r\n  const isCurrentPath = (path) => {\r\n    const currentPath = window.location.pathname;\r\n    if (currentPath === path) {\r\n      return \"navbar__element navbar__element-current\";\r\n    } else {\r\n      return \"navbar__element\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"navbar\">\r\n      <Row className=\"navbar__topHalf\" justify=\"space-around\" gutter={12}>\r\n        <Col className=\"navbar__elements\" flex={2}>\r\n          {/*Dropdown replaces the navbar in small screens */}\r\n          <Col>\r\n            <Dropdown className=\"navbar__dropdown\" overlay={navbarMenu}>\r\n              <button className=\"navbar__dropdown-btn\">\r\n                <FontAwesomeIcon icon={faBars} />\r\n              </button>\r\n            </Dropdown>\r\n          </Col>\r\n\r\n          <Col>\r\n            <li>\r\n              <Link to=\"/\" className={isCurrentPath(\"/\")}>\r\n                {t(\"navbar.home\")}\r\n              </Link>\r\n            </li>\r\n          </Col>\r\n          <Col>\r\n            <li>\r\n              <Link to=\"/about\" className={isCurrentPath(\"/about\")}>\r\n                {t(\"navbar.about\")}\r\n              </Link>\r\n            </li>\r\n          </Col>\r\n          <Col>\r\n            <li>\r\n              <Link to=\"/games\" className={isCurrentPath(\"/games\")}>\r\n                {t(\"navbar.games\")}\r\n              </Link>\r\n            </li>\r\n          </Col>\r\n        </Col>\r\n\r\n        <Col span={4} flex={2}>\r\n          <Link className=\"navbar__title\" to=\"/\">\r\n            Juniper\r\n          </Link>\r\n        </Col>\r\n\r\n        <Col className=\"navbar__elements\" flex={2}>\r\n          <Col>\r\n            <li>\r\n              <Link to=\"/resources\" className={isCurrentPath(\"/resources\")}>\r\n                {t(\"navbar.resources\")}\r\n              </Link>\r\n            </li>\r\n          </Col>\r\n          <Col>\r\n            <li>\r\n              <Link to=\"/contact\" className={isCurrentPath(\"/contact\")}>\r\n                {t(\"navbar.contact\")}\r\n              </Link>\r\n            </li>\r\n          </Col>\r\n          <Col>\r\n            <li>\r\n              {user && user.isLoggedin ? (\r\n                <a\r\n                  href=\"/#\"\r\n                  onClick={(e) => {\r\n                    e.preventDefault();\r\n                    auth.signOut();\r\n                  }}\r\n                >\r\n                  Logout\r\n                </a>\r\n              ) : (\r\n                <Link to=\"/login\" className={isCurrentPath(\"/login\")}>\r\n                  {t(\"navbar.login\")}\r\n                </Link>\r\n              )}\r\n            </li>\r\n          </Col>\r\n          <Col>\r\n            <Dropdown\r\n              overlay={languagesMenu}\r\n              className=\"navbar__languageContainer\"\r\n            >\r\n              <FontAwesomeIcon\r\n                icon={faGlobeAfrica}\r\n                className=\"navbar__element-lang\"\r\n              />\r\n            </Dropdown>\r\n          </Col>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row className=\"navbar__bottomHalf\">\r\n        <div className=\"navbar__helperDiv\"></div>\r\n        <div></div>\r\n      </Row>\r\n\r\n      <Link\r\n        className={\r\n          document.dir === \"ltr\"\r\n            ? \"navbar__logo-ltrLink navbar__logo-link\"\r\n            : \"navbar__logo-rtlLink navbar__logo-link\"\r\n        }\r\n        to={\"/\"}\r\n      >\r\n        <img className=\"navbar__logo\" src={logoImg} alt=\"juniper-logo\" />\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport { Row, Col } from \"antd\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faYoutube,\r\n  faFacebook,\r\n  faInstagram,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nimport \"./index.css\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport globe from \"./../../images/earthNav.svg\";\r\n\r\nconst LIGHT_GREEN_BACKGROUND_PAGES = [\r\n  \"/about\",\r\n  \"/resources\",\r\n  \"/games/memorygame\",\r\n  \"/games/puzzlegame\",\r\n  \"/games/quizgame\",\r\n  \"/login\",\r\n];\r\n\r\nconst LIGHT_GREEN = \"#b4d0c4\";\r\nconst DARK_GREEN = \"#2a8c79\";\r\n\r\nconst Footer = () => {\r\n  const curRoute = useLocation().pathname;\r\n  const [t] = useTranslation();\r\n\r\n  return (\r\n    <div\r\n      className=\"footerContainer\"\r\n      style={{\r\n        backgroundColor: LIGHT_GREEN_BACKGROUND_PAGES.includes(curRoute)\r\n          ? LIGHT_GREEN\r\n          : DARK_GREEN,\r\n      }}\r\n    >\r\n      <footer>\r\n        <img alt=\"globe\" src={globe} className=\"footerContainer__globe\" />\r\n        <Col>\r\n          <Row\r\n            gutter={[25]}\r\n            justify=\"center\"\r\n            className=\"footerContainer__links\"\r\n          >\r\n            <Col className=\"footerContainer__links__nav\">\r\n              <Link to=\"/trademark\"> {t(\"footer.trademark\")}</Link>\r\n            </Col>\r\n            <Col className=\"footerContainer__links__nav\">\r\n              <Link to=\"/contact\"> {t(\"footer.contact\")}</Link>\r\n            </Col>\r\n            <Col className=\"footerContainer__links__nav\">\r\n              <Link to=\"/policies\"> {t(\"footer.policies\")}</Link>\r\n            </Col>\r\n            <Col className=\"footerContainer__links__nav\">\r\n              <Link to=\"/games\"> {t(\"footer.games\")}</Link>\r\n            </Col>\r\n            <Col className=\"footerContainer__links__nav\">\r\n              <Link to=\"/about\"> {t(\"footer.about\")}</Link>\r\n            </Col>\r\n          </Row>\r\n          <Row justify=\"center\" className=\"footerContainer__social\">\r\n            <Col>\r\n              {/* note: facebook,instagram,youtube are built in fortawesome classes */}\r\n              <a href=\"https://www.facebook.com\" className=\"facebook social\">\r\n                <FontAwesomeIcon icon={faFacebook} size=\"2x\" />\r\n              </a>\r\n            </Col>\r\n            <Col>\r\n              <a href=\"https://www.instagram.com\" className=\"instagram social\">\r\n                <FontAwesomeIcon icon={faInstagram} size=\"2x\" />\r\n              </a>\r\n            </Col>\r\n            <Col>\r\n              <a href=\"https://www.youtube.com\" className=\"youtube social\">\r\n                <FontAwesomeIcon icon={faYoutube} size=\"2x\" />\r\n              </a>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </footer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport { Col, Row } from \"antd\";\r\nimport \"./index.css\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport recycleImg from \"./../../images/recycleResourceSetion.svg\";\r\nimport earthImg from \"./../../images/earthResourceSetion.svg\";\r\nimport pollutionImg from \"./../../images/pollutionResourceSetion.svg\";\r\n\r\nconst ResourcesSection = () => {\r\n  const [t] = useTranslation();\r\n  return (\r\n    <div className=\"resourceCardWrapper\">\r\n      <Row justify=\"center\" gutter={[16, 16]}>\r\n        <Col>\r\n          <Row justify=\"center\">\r\n            <Col className=\"resourceCardWrapper__cardName\">\r\n              <Link to=\"/resources\">\r\n                {t(\"home.resourcesSection.pollution\")}\r\n              </Link>\r\n            </Col>\r\n          </Row>\r\n          <Row justify=\"center\">\r\n            <Col className=\"resourceCardWrapper__cardImage\">\r\n              <Link to=\"/resources\">\r\n                <img alt=\"pollution\" src={pollutionImg} />\r\n              </Link>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n        <Col>\r\n          <Row justify=\"center\">\r\n            <Col className=\"resourceCardWrapper__cardName\">\r\n              <Link to=\"/resources\">\r\n                {t(\"home.resourcesSection.climateChange\")}\r\n              </Link>\r\n            </Col>\r\n          </Row>\r\n          <Row justify=\"center\">\r\n            <Col className=\"resourceCardWrapper__cardImage\">\r\n              <Link to=\"/resources\">\r\n                <img alt=\"Climate Change\" src={earthImg} />\r\n              </Link>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n        <Col>\r\n          <Row justify=\"center\">\r\n            <Col className=\"resourceCardWrapper__cardName\">\r\n              <Link to=\"/resources\">\r\n                {t(\"home.resourcesSection.reduceReuseRecycle\")}\r\n              </Link>\r\n            </Col>\r\n          </Row>\r\n          <Row justify=\"center\">\r\n            <Col className=\"resourceCardWrapper__cardImage\">\r\n              <Link to=\"/resources\">\r\n                <img alt=\"Recycle\" src={recycleImg} />\r\n              </Link>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResourcesSection;\r\n","import React from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Row, Col } from \"antd\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport i18next from \"i18next\";\r\nimport { Link } from \"react-router-dom\";\r\nimport homePageHeaderImgLeft from \"../../images/child.png\";\r\nimport homePageHeaderImgRight from \"../../images/family.png\";\r\nimport \"./index.css\";\r\n\r\nexport default function HomePageHeaderSection() {\r\n  const { t } = useTranslation();\r\n  const currentLanguage = i18next.language;\r\n  return (\r\n    <>\r\n      <div className=\"homePageHeaderContainer\">\r\n        <Row justify=\"space-around\" align=\"middle\">\r\n          <Col span={4}>\r\n            <img\r\n              alt=\"children playing in the garden\"\r\n              src={`${\r\n                currentLanguage === \"ar\"\r\n                  ? homePageHeaderImgLeft\r\n                  : homePageHeaderImgRight\r\n              }`}\r\n              className=\"homePageHeaderContainer__rightImg\"\r\n            />\r\n          </Col>\r\n\r\n          <Col span={4} offset={6}>\r\n            <Row>\r\n              <h2\r\n                className={`${\r\n                  currentLanguage === \"ar\"\r\n                    ? \"homePageHeaderContainer__arTitle\"\r\n                    : \"homePageHeaderContainer__title\"\r\n                }`}\r\n              >\r\n                {t(\"home.headerSection.mainText\")}\r\n              </h2>\r\n              <br />\r\n              <p className=\"homePageHeaderContainer__paragraph\">\r\n                {t(\"home.headerSection.secondaryText\")}\r\n              </p>\r\n            </Row>\r\n            <Row justify=\"center\" className=\"homePageHeaderContainer__button\">\r\n              <Col>\r\n                <Link to=\"/games\">\r\n                  <button className=\"homePageHeaderContainer__row\">\r\n                    {t(\"home.headerSection.headerButton\")}\r\n                  </button>\r\n                </Link>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n          <Col offset={6} span={4}>\r\n            <img\r\n              className=\"homePageHeaderContainer__img\"\r\n              alt=\"children playing in the garden\"\r\n              src={`${\r\n                currentLanguage === \"ar\"\r\n                  ? homePageHeaderImgRight\r\n                  : homePageHeaderImgLeft\r\n              }`}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./index.css\";\r\n\r\nconst TwitterImage = ({ src, href, alt }) => {\r\n  return (\r\n    <a href={href} target=\"_blank\" rel=\"noopener noreferrer\">\r\n      <img src={src} alt={alt} className=\"twitterContent__col__image\" />\r\n    </a>\r\n  );\r\n};\r\n\r\nexport default TwitterImage;\r\n","import React from \"react\";\r\nimport { Typography, Row, Col } from \"antd\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport TwitterImage from \"../TwitterImage\";\r\nimport \"./index.css\";\r\n\r\nconst StayUpToDate = () => {\r\n  const { Title } = Typography;\r\n  const [t] = useTranslation();\r\n\r\n  const twitterPagesData = [\r\n    ...t(\"home.twitterPages\", {\r\n      returnObjects: true,\r\n    }),\r\n  ];\r\n\r\n  const twitterImages = twitterPagesData.map((page) => {\r\n    return (\r\n      <Col\r\n        xs={24}\r\n        lg={12}\r\n        className=\"stayUpToDate__twitterContent__col\"\r\n        key={page.href}\r\n      >\r\n        <TwitterImage alt={page.alt} href={page.href} src={page.src} />\r\n      </Col>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className=\"stayUpToDate\">\r\n      <Title>\r\n        <span className=\"stayUpToDate__title\">{t(\"home.stayUpToDate\")}</span>\r\n      </Title>\r\n      <Row className=\"stayUpToDate__twitterContent\">{twitterImages}</Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StayUpToDate;\r\n","/**\r\n * Navbar has a section that displays top half of a wide elliptical shape.\r\n * This component is the bottom half of elliptical shape\r\n */\r\n\r\nimport React from \"react\";\r\nimport \"./index.css\";\r\n\r\nconst BottomCurve = () => {\r\n  return (\r\n    <div className=\"bottomCurveContainer\">\r\n      <div className=\"bottomCurveContainer__bottomCurve\">\r\n        <div className=\"bottomCurveContainer__bottomCurve__topHalf\" />\r\n        <div className=\"bottomCurveContainer__bottomCurve__bottomHalf\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default BottomCurve;\r\n","/*\r\n * Functionality of this button is not %100 agreed upon.\r\n * So, the link it directs to is not correct.\r\n */\r\n\r\nimport React from \"react\";\r\nimport { Row, Col } from \"antd\";\r\nimport { TwitterCircleFilled } from \"@ant-design/icons\";\r\nimport \"./index.css\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst SpreadTheWordButton = () => {\r\n  const [t] = useTranslation();\r\n\r\n  return (\r\n    <Row justify=\"center\" className=\"spreadTheWord\">\r\n      <Col lg={12} sm={14} xs={16}>\r\n        <a\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n          href=\"https://www.twitter.com\"\r\n        >\r\n          <button type=\"button\" className=\"spreadTheWord__button\">\r\n            <TwitterCircleFilled className=\"twitterIcon\" />\r\n            {t(\"home.spreadTheWord\")}\r\n          </button>\r\n        </a>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default SpreadTheWordButton;\r\n","// React-Slider customised settings\r\nexport const settings = {\r\n  infinite: true,\r\n  slidesToShow: 3,\r\n  speed: 500,\r\n  arrow: true,\r\n  responsive: [\r\n    {\r\n      breakpoint: 1000,\r\n      settings: {\r\n        slidesToShow: 2,\r\n        slidesToScroll: 1,\r\n        initialSlide: 2,\r\n      },\r\n    },\r\n    {\r\n      breakpoint: 480,\r\n      settings: {\r\n        slidesToShow: 1,\r\n        slidesToScroll: 1,\r\n      },\r\n    },\r\n  ],\r\n};\r\n","import React from \"react\";\r\nimport Slider from \"react-slick\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport \"./index.css\";\r\nimport { settings } from \"./settings.jsx\";\r\nimport { Link } from \"react-router-dom\";\r\nimport memoryGame from \"../../images/gameImages/memoryGame.svg\";\r\nimport puzzleGame from \"../../images/gameImages/puzzleGame.svg\";\r\nimport quizGame from \"../../images/gameImages/quizGame.svg\";\r\n\r\n// GAME_IMAGES consists of game images local paths as a string format\r\n// imgURLParts is a splits the game image paths from \"/\" and put each splitted path into an array\r\n// lastImgUrlPart gets last item in the each splitted path's arrays\r\n// imageName gets image name from the lasTImgUrlPart\r\n// gameRoute is lowercased version of imageName, using in routing\r\nconst GAME_IMAGES = [memoryGame, puzzleGame, quizGame];\r\n\r\nconst GamesCarousel = () => {\r\n  const [t] = useTranslation();\r\n  // agreed naming is as follows:\r\n  // image file name: memoryGame\r\n  // game title key in locales: memoryGame.title\r\n  // game route: memorygame\r\n  return (\r\n    <div className=\"gamesCarousel\">\r\n      <h2 className=\"gamesCarousel__title\">{t(\"home.gamesCarousel.title\")}</h2>\r\n      <p className=\"gamesCarousel__context\">\r\n        {t(\"home.gamesCarousel.subtitle\")}\r\n      </p>\r\n      <div className=\"gamesCarousel__wrapper\">\r\n        <Slider {...settings}>\r\n          {GAME_IMAGES.map((imgUrl) => {\r\n            const imgUrlParts = imgUrl.split(\"/\");\r\n            const lastImgUrlPart = imgUrlParts[imgUrlParts.length - 1];\r\n            const imageName = lastImgUrlPart.split(\".\")[0];\r\n            const gameRoute = imageName.toLowerCase();\r\n            const gameTitle = t(`games.${imageName}.title`);\r\n            return (\r\n              <Link to={`games/${gameRoute}`} key={gameTitle}>\r\n                <div className=\"gamesCarousel__wrapper__card\">\r\n                  <img\r\n                    src={imgUrl}\r\n                    className=\"gamesCarousel__wrapper__cardImage\"\r\n                    alt={gameTitle}\r\n                  />\r\n                  <div className=\"gamesCarousel__wrapper__cardTitle\">\r\n                    <h3>{gameTitle}</h3>\r\n                  </div>\r\n                </div>\r\n              </Link>\r\n            );\r\n          })}\r\n        </Slider>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GamesCarousel;\r\n","import React from \"react\";\r\nimport ResourcesSection from \"../../components/ResourcesSection\";\r\nimport HomePageHeaderSection from \"../../components/HomePageHeaderSection\";\r\nimport StayUpToDate from \"../../components/StayUpTodate\";\r\nimport BottomCurve from \"../../components/BottomCurve/index\";\r\nimport SpreadTheWordButton from \"../../components/SpreadTheWordButton\";\r\nimport \"./index.css\";\r\nimport GamesCarousel from \"../../components/GamesCarousel\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <>\r\n      <HomePageHeaderSection />\r\n      <ResourcesSection />\r\n      <GamesCarousel />\r\n      <BottomCurve />\r\n      <SpreadTheWordButton />\r\n      <StayUpToDate />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","// Check Fisher–Yates shuffle algorithm https://en.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle\r\n// non destructive shuffle\r\nconst shuffle = (arr) => {\r\n  const copyOfArr = [...arr];\r\n  for (let i = copyOfArr.length - 1; i > 0; i -= 1) {\r\n    const j = Math.floor(Math.random() * (i + 1));\r\n    [copyOfArr[i], copyOfArr[j]] = [copyOfArr[j], copyOfArr[i]];\r\n  }\r\n  return copyOfArr;\r\n};\r\n\r\nexport default shuffle;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Col } from \"antd\";\r\nimport shuffle from \"./../memorygame/shuffle\";\r\nimport \"./index.css\";\r\n\r\nconst NUM_OF_TILES = 6;\r\n\r\n// PuzzleGrid is the component that generates and includes the tiles of the puzzle\r\n// it generates 6 tiles ordered vertically on top of each other\r\n// each tile's background is 1/6 of the image. After the tiles are generated they are put\r\n// in an array and ordered randomly\r\n// a user can click on one tile to select and then click on another tile to swap their places\r\n// the user will swap the places of each tile to put it in its correct position\r\n// when all tiles are placed in their correct position the full image is displayed\r\nconst PuzzleGrid = ({ puzzleImage }) => {\r\n  // currentPuzzleState holds the current order of the tiles and updates them when the user swaps tiles\r\n  const [currentPuzzleState, setCurrentPuzzleState] = useState([]);\r\n  // selectedTileId state shows if there is a tile selected and which one is selected if any\r\n  const [selectedTileId, setSelectedTileId] = useState(null);\r\n  // if unsolved it displays the tiles and when solved it displays the full image\r\n  const [isSolved, setIsSolved] = useState(false);\r\n\r\n  const tilesGenerator = () => {\r\n    const newTilesArray = [];\r\n    // for loop to generate tiles where tiles are puzzle pieces\r\n    for (let tileId = 0; tileId < NUM_OF_TILES; tileId++) {\r\n      let tileTopStyling = tileId * 100;\r\n      // value of selected is used for styling purposes where the selected tile should be highlighted\r\n      // value of top is used for fitting the image inside the tile and give a cropping effect\r\n      // This effect is achieved by creating a div for each tile that contains an image\r\n      // that's 6 times larger than the div then move the image to the top by setting the\r\n      // the overflow value of the containing div to hidden and moving the image to the top\r\n      // using a percentage of the height of the wrapping div (percetange is set according to Id)\r\n      // the image is moved to the top by giving it a minus top value\r\n      let newTile = { id: tileId, selected: false, top: tileTopStyling };\r\n      newTilesArray.push(newTile);\r\n    }\r\n\r\n    const randomizedTilesArray = shuffle(newTilesArray);\r\n    setCurrentPuzzleState(randomizedTilesArray);\r\n  };\r\n\r\n  useEffect(() => {\r\n    tilesGenerator();\r\n  }, [puzzleImage]);\r\n\r\n  const checkSolution = () => {\r\n    // tiles are saved in an array indexed from 0 to n (6) and displayed in that order\r\n    // first condition checks if tile's id is equal to its index in the array and returns false/true\r\n    // since initial acc value is true, second condition checks if prev value is true and keeps its value\r\n    const isCorrect = currentPuzzleState.reduce(\r\n      (acc, currTile, tileCurrIndex) => {\r\n        if (currTile.id !== tileCurrIndex || acc === false) {\r\n          return false;\r\n        } else {\r\n          return acc;\r\n        }\r\n      },\r\n      true\r\n    );\r\n    setIsSolved(isCorrect);\r\n  };\r\n\r\n  useEffect(checkSolution, [currentPuzzleState]);\r\n\r\n  const handleClick = (clickedTileId) => {\r\n    // if selectedTileId's value is not equal to null (meaning there is a tile seleted already)\r\n    // then when another tile is clicked swap both tiles' places\r\n    // else set the selectedTileId to the id of the clicked tile\r\n    if (selectedTileId !== null) {\r\n      const prevId = selectedTileId;\r\n      swapTiles(prevId, clickedTileId);\r\n    } else {\r\n      setSelectedTileId(clickedTileId);\r\n      const clickedTileIndex = currentPuzzleState.findIndex(\r\n        (tile) => tile.id === clickedTileId\r\n      );\r\n      // set the select value of the tile to true\r\n      const copyOfPuzzleState = [...currentPuzzleState];\r\n      copyOfPuzzleState[clickedTileIndex] = {\r\n        ...copyOfPuzzleState[clickedTileIndex],\r\n        selected: true,\r\n      };\r\n      setCurrentPuzzleState(copyOfPuzzleState);\r\n    }\r\n  };\r\n\r\n  // This function takes the Id of two tiles and swaps their places\r\n  const swapTiles = (tileId0, tileId1) => {\r\n    let newTiles = [...currentPuzzleState];\r\n    let tileIndex0 = currentPuzzleState.findIndex(\r\n      (tile) => tile.id === tileId0\r\n    );\r\n    let tileIndex1 = currentPuzzleState.findIndex(\r\n      (tile) => tile.id === tileId1\r\n    );\r\n    let tile0 = { ...currentPuzzleState[tileIndex0] };\r\n    let tile1 = { ...currentPuzzleState[tileIndex1] };\r\n    newTiles[tileIndex0] = tile1;\r\n    newTiles[tileIndex1] = tile0;\r\n    newTiles.forEach((tile) => (tile.selected = false));\r\n    setCurrentPuzzleState(newTiles);\r\n    setSelectedTileId(null);\r\n  };\r\n\r\n  let gridBody;\r\n  if (isSolved) {\r\n    gridBody = (\r\n      <img\r\n        className=\"puzzleGrid__imageDisplayed\"\r\n        src={puzzleImage}\r\n        alt=\"tile\"\r\n      />\r\n    );\r\n  } else {\r\n    gridBody = currentPuzzleState.map((tile) => {\r\n      return (\r\n        <Col\r\n          key={\"tileNumber-\" + tile.id}\r\n          className={\r\n            tile.selected ? \"selectedTile puzzleGrid__tile\" : \"puzzleGrid__tile\"\r\n          }\r\n          onClick={() => handleClick(tile.id)}\r\n        >\r\n          <img\r\n            className=\"puzzleGrid__puzzledImage\"\r\n            src={puzzleImage}\r\n            alt=\"A moveable tile\"\r\n            style={{ top: `-${tile.top}%` }}\r\n          />\r\n        </Col>\r\n      );\r\n    });\r\n  }\r\n\r\n  return <Col className=\"puzzleGrid\">{gridBody}</Col>;\r\n};\r\n\r\nexport default PuzzleGrid;\r\n","import React, { useState } from \"react\";\r\nimport { Col, Row, Card } from \"antd\";\r\nimport habitatImg from \"./../../images/puzzleGame/habitat.jpg\";\r\nimport conservationImg from \"./../../images/puzzleGame/conservation.jpg\";\r\nimport holdingPlantImg from \"./../../images/puzzleGame/holdingPlant.jpg\";\r\nimport plantingImg from \"./../../images/puzzleGame/planting.jpg\";\r\nimport PuzzleGrid from \"./../PuzzleGrid\";\r\nimport \"./index.css\";\r\n\r\nconst PUZZLE_IMAGE_POOL = [\r\n  habitatImg,\r\n  conservationImg,\r\n  holdingPlantImg,\r\n  plantingImg,\r\n];\r\n\r\n// This component contains the list of images the user can choose to solve\r\n// it also renders the PuzzleGrid component\r\n// When the user clicks on an image it will be passed to the PuzzleGrid component as a prop\r\n// PuzzleGrid then renders the puzzle tiles of that image\r\nconst PuzzleGameContainer = () => {\r\n  // currentImage is the image displayed for the puzzle.\r\n  // It will be divided into pieces using CSS.\r\n  const [currentImage, setCurrentImage] = useState(PUZZLE_IMAGE_POOL[0]);\r\n\r\n  const handleImageClick = (e) => {\r\n    setCurrentImage(e.target.getAttribute(\"src\"));\r\n  };\r\n\r\n  return (\r\n    <Card size=\"small\" className=\"gameContainer\" bordered={false}>\r\n      <Col className=\"gameContainer__listOfImages\">\r\n        {PUZZLE_IMAGE_POOL.map((img, imgIndex) => {\r\n          return (\r\n            <Row\r\n              key={\"image-\" + imgIndex}\r\n              onClick={(e) => handleImageClick(e)}\r\n              className=\"gameContainer__listOfImages--imgContainer\"\r\n            >\r\n              <img\r\n                className=\"gameContainer__listOfImages--img\"\r\n                src={img}\r\n                alt=\"Click to choose your puzzle\"\r\n              />\r\n            </Row>\r\n          );\r\n        })}\r\n      </Col>\r\n      <Col className=\"gameContainer__puzzleGrid\">\r\n        <PuzzleGrid puzzleImage={currentImage} />\r\n      </Col>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default PuzzleGameContainer;\r\n","import React from \"react\";\r\nimport { Layout, Popover, Row } from \"antd\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport PuzzleGameContainer from \"./../PuzzleGameContainer\";\r\nimport { QuestionCircleTwoTone } from \"@ant-design/icons\";\r\n\r\nimport \"./index.css\";\r\n\r\nconst PuzzlePageContent = () => {\r\n  const [t] = useTranslation();\r\n  const { Content } = Layout;\r\n  return (\r\n    <Content className=\"puzzlePage__content\">\r\n      <div className=\"puzzlePage__content__titles\">\r\n        <h2 className=\"puzzlePage__content__title\">\r\n          {t(\"games.puzzleGame.title\")}\r\n        </h2>\r\n        <p className=\"puzzlePage__content__subtitle\">\r\n          {t(\"games.puzzleGame.subtitle\")}\r\n        </p>\r\n      </div>\r\n\r\n      <Row className=\"puzzlePage_content--questionMark\">\r\n        <Popover\r\n          content={t(\"games.puzzleGame.howToPlayDescription\")}\r\n          title={t(\"games.puzzleGame.howToPlayTitle\")}\r\n          placement=\"topRight\"\r\n        >\r\n          <QuestionCircleTwoTone className=\"questionMark\" />\r\n        </Popover>\r\n      </Row>\r\n\r\n      <PuzzleGameContainer />\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default PuzzlePageContent;\r\n","import React from \"react\";\r\nimport PuzzlePageContent from \"./../../components/PuzzlePageContent/index\";\r\n\r\nconst PuzzlePage = () => {\r\n  return (\r\n    <>\r\n      <PuzzlePageContent />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PuzzlePage;\r\n","// configuration file for \"Confetti\" component\r\nconst confettiConfig = {\r\n  angle: \"180\",\r\n  spread: \"360\",\r\n  startVelocity: 40,\r\n  elementCount: \"200\",\r\n  dragFriction: 0.12,\r\n  duration: \"4100\",\r\n  stagger: \"2\",\r\n  width: \"10px\",\r\n  height: \"10px\",\r\n  perspective: \"500px\",\r\n  colors: [\"#a864fd\", \"#29cdff\", \"#78ff44\", \"#ff718d\", \"#fdff6a\"],\r\n};\r\n\r\nexport default confettiConfig;\r\n","import React from \"react\";\r\nimport \"./index.css\";\r\nimport { List, Card } from \"antd\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n/**\r\n * Upon matching cards, a fact related to matched cards appears on screen\r\n * This component creates the list that will hold all facts\r\n * \"facts\" is an array of state objects\r\n * To see state object example check src/components/memorygame/MemoryGameBoard/index.jsx\r\n */\r\nconst MemoryGameFactList = ({ facts }) => {\r\n  const [t] = useTranslation();\r\n  let factListContent;\r\n  // facts is an empty array by default, it gets filled when user makes successful match\r\n  if (facts.length !== 0) {\r\n    factListContent = (\r\n      <List\r\n        className=\"memoryGameFactListContainer__list\"\r\n        dataSource={facts}\r\n        renderItem={(fact) => (\r\n          <List.Item className=\"memoryGameFactListContainer__list__item\">\r\n            <a target=\"__blank\" href={fact.link}>\r\n              <Card className=\"memoryGameFactListContainer__list__item__card\">\r\n                {fact.phrase}\r\n              </Card>\r\n            </a>\r\n          </List.Item>\r\n        )}\r\n      />\r\n    );\r\n  } else {\r\n    factListContent = (\r\n      <h5 className=\"memoryGameFactListContainer__noFacts\">\r\n        {t(\"games.memoryGame.emptyFactListMessage\")}\r\n      </h5>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"memoryGameFactListContainer\" id=\"memoryGameFactList\">\r\n      <h1 className=\"memoryGameFactListContainer__title\">\r\n        {t(\"games.memoryGame.facts\")}\r\n      </h1>\r\n      {factListContent}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MemoryGameFactList;\r\n","import acidRain from \"../../images/memoryGame/acidRain.svg\";\r\nimport airPollution from \"../../images/memoryGame/airPollution.svg\";\r\nimport alternateEnergy from \"../../images/memoryGame/alternateEnergy.svg\";\r\nimport chemicalWaste from \"../../images/memoryGame/chemicalWaste.svg\";\r\nimport deforestation from \"../../images/memoryGame/deforestation.svg\";\r\nimport globalWarming from \"../../images/memoryGame/globalWarming.svg\";\r\nimport greenhouseEffect from \"../../images/memoryGame/greenhouseEffect.svg\";\r\nimport littering from \"../../images/memoryGame/littering.svg\";\r\nimport meltingIceCaps from \"../../images/memoryGame/meltingIceCaps.svg\";\r\nimport ozoneHole from \"../../images/memoryGame/ozoneHole.svg\";\r\nimport recycle from \"../../images/memoryGame/recycle.svg\";\r\nimport waterPollution from \"../../images/memoryGame/waterPollution.svg\";\r\n\r\nconst CARD_BACKSIDE_IMAGES = [\r\n  acidRain,\r\n  airPollution,\r\n  alternateEnergy,\r\n  chemicalWaste,\r\n  deforestation,\r\n  globalWarming,\r\n  greenhouseEffect,\r\n  littering,\r\n  meltingIceCaps,\r\n  ozoneHole,\r\n  recycle,\r\n  waterPollution,\r\n];\r\n\r\nexport default CARD_BACKSIDE_IMAGES;\r\n","import invariant from \"invariant\";\r\nimport CARD_BACKSIDE_IMAGES from \"./memoryCardBackSideImages\";\r\nimport shuffle from \"./shuffle\";\r\n\r\n/**\r\n * cardDataArr example:\r\n * [{description:\"...\",link:\"...\",phrase:\"..\"},{description:\"...\",link:\"...\",phrase:\"..\"},...]\r\n *\r\n * CARD_BACKSIDE_IMAGES example:[image1,image2,...]\r\n *\r\n * Game example: https://www.brightfocus.org/alzheimers/memory-games/match-pictures\r\n * Instead of squares this game uses cards.\r\n *\r\n * This function prepares the statesArr that sets the structure of game board\r\n */\r\nconst cardInitialStateGenerator = (cardDataArr, numRequiredMatches) => {\r\n  invariant(\r\n    cardDataArr.length === CARD_BACKSIDE_IMAGES.length,\r\n    \"'numRequiredMatches' and 'cardDataArr' have different length\"\r\n  );\r\n  let clonedCardData = [];\r\n  let clonedImgArr = [];\r\n\r\n  // cardDataArr should be cloned to provide \"NUM_REQUIRED_MATCHES\" amount of match per image\r\n  // clonedImgArr should be cloned to easier image-state matching\r\n  for (let i = 0; i < numRequiredMatches; i += 1) {\r\n    clonedCardData = [...clonedCardData, ...cardDataArr];\r\n    clonedImgArr = [...clonedImgArr, ...CARD_BACKSIDE_IMAGES];\r\n  }\r\n\r\n  let cardStates = [];\r\n\r\n  clonedCardData.forEach((card, index) => {\r\n    // clonedCardData and clonedImgArr ordered in same way\r\n    // clonedImgArr[0] holds image for clonedCardData[0]\r\n    // clonedImgArr[index] is a directory\r\n    const imgSrc = clonedImgArr[index];\r\n    const imgNameParts = clonedImgArr[index].split(\"/\");\r\n    const lastNamePart = imgNameParts[imgNameParts.length - 1];\r\n    // lastNamePart is something like acidRain.234234\r\n    const imgName = lastNamePart.split(\".\")[0];\r\n    // unique cardKey and same imgKey are needed for card match condition\r\n    // card keys of matching images should be like \"acidRain0\", \"acidRain1\"...\r\n    let cardKey = \"\";\r\n    // increments number by doing search For example: if there are 3 \"acidRain\"\r\n    // their cardKeys will be as follows \"acidRain0\" \"acidRain1\" \"acidRain2\"\r\n    const numSameCardKeysSoFar = cardStates.filter(\r\n      (prevCardState) => prevCardState.description === card.description\r\n    ).length;\r\n    cardKey = `${imgName}${numSameCardKeysSoFar}`;\r\n    cardStates = [\r\n      ...cardStates,\r\n      {\r\n        ...card,\r\n        cardKey,\r\n        isFlipped: false,\r\n        isMatched: false,\r\n        img: { src: imgSrc, imgKey: imgName },\r\n      },\r\n    ];\r\n  });\r\n  return shuffle(cardStates);\r\n};\r\n\r\nexport default cardInitialStateGenerator;\r\n","// manipulates isFlipped and isMatched property of card a state\r\n// cardStateKey example : \"isMatched\"\r\n// cardStates is an array of objects(states)\r\n// see MemoryGameBoard/index.jsx to for cardStates example and use of this function\r\n// targetCard is an element of cardStates array.\r\n// invertCardStateForKey is called when selectedCards state change.\r\nexport const invertCardStateForKey = (\r\n  cardStateKey,\r\n  targetCard,\r\n  cardStates,\r\n  setCardStates\r\n) => {\r\n  const copyOfCardStates = [...cardStates];\r\n  const targetIndex = copyOfCardStates.findIndex(\r\n    (cardState) => cardState.cardKey === targetCard.cardKey\r\n  );\r\n  const targetCardState = copyOfCardStates[targetIndex];\r\n  // isMatched is false as default. When it is true success symbol appears in card\r\n  if (cardStateKey === \"isMatched\") {\r\n    targetCardState.isMatched = !targetCardState.isMatched;\r\n    setCardStates(() => [...copyOfCardStates]);\r\n  } else if (cardStateKey === \"isFlipped\") {\r\n    // at this point isFlipped is always true and user failed to match cards.\r\n    // resets it back to false. But gives player time to see failed cards\r\n    setTimeout(() => {\r\n      targetCardState.isFlipped = !targetCardState.isFlipped;\r\n      setCardStates(() => [...copyOfCardStates]);\r\n    }, 750);\r\n  } else {\r\n    throw new Error(\"Invalid property was passed to invertCardStateForKey\");\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { HashLink } from \"react-router-hash-link\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Button } from \"antd\";\r\nimport \"./index.css\";\r\n\r\nconst ScrollToFacts = () => {\r\n  const [t] = useTranslation();\r\n  return (\r\n    // HashLink is being used to redirect user to fact list,\r\n    // Check https://github.com/rafgraph/react-router-hash-link for 'react-router-hash-link'\r\n    <HashLink to=\"#memoryGameFactList\" smooth>\r\n      <Button className=\"scrollToFactsButton\" type=\"primary\">\r\n        {t(\"games.memoryGame.scrollToFactsButtonText\")}\r\n      </Button>\r\n    </HashLink>\r\n  );\r\n};\r\n\r\nexport default ScrollToFacts;\r\n","import React from \"react\";\r\nimport { QuestionCircleTwoTone } from \"@ant-design/icons\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Popover } from \"antd\";\r\nimport \"./index.css\";\r\n\r\nconst QuestionMarkIcon = () => {\r\n  const [t] = useTranslation();\r\n  return (\r\n    <Popover\r\n      content={t(\"games.memoryGame.howToPlayDescription\")}\r\n      title={t(\"games.memoryGame.howToPlayTitle\")}\r\n      placement=\"topRight\"\r\n    >\r\n      <QuestionCircleTwoTone className=\"questionMarkIcon\" />\r\n    </Popover>\r\n  );\r\n};\r\n\r\nexport default QuestionMarkIcon;\r\n","import React from \"react\";\r\nimport ReactCardFlip from \"react-card-flip\";\r\nimport { Card } from \"antd\";\r\nimport questionMark from \"../../../images/memoryGameFrontImage.png\";\r\nimport \"./index.css\";\r\n\r\n// for cardStates example check src/components/memorygame/MemoryGameBoard/index.jsx\r\n// FlippableCard is being used in a map function. So targetState refers to each iteration of map\r\n// Mapped array is cardStates.\r\n// selectedCards is an array of clicked card states(objects).\r\nconst FlippableCard = ({\r\n  targetState,\r\n  cardStates,\r\n  setCardStates,\r\n  selectedCards,\r\n  setSelectedCards,\r\n}) => {\r\n  // handle click flips card\r\n  // if the card is not in selectedCards, adds it to selectedCards\r\n  const handleClick = (clickedCardState) => {\r\n    const copyOfCardStates = [...cardStates];\r\n    // current index is needed to keep the order of cards displayed\r\n    // because goal is to make user remember the spots of previous cards\r\n    const clickedCardIndex = cardStates.findIndex(\r\n      (state) => state.cardKey === clickedCardState.cardKey\r\n    );\r\n    const targetCardState = copyOfCardStates[clickedCardIndex];\r\n    targetCardState.isFlipped = true;\r\n    setCardStates(() => [...copyOfCardStates]);\r\n    // prevents user to use same card multiple times\r\n    const isCardInSelectedCards = selectedCards.some(\r\n      (selectedCard) => selectedCard.cardKey === clickedCardState.cardKey\r\n    );\r\n    if (!isCardInSelectedCards) {\r\n      setSelectedCards((prevState) => [...prevState, clickedCardState]);\r\n    }\r\n  };\r\n  return (\r\n    // ReactCardFlip requires 2 children(front side and back side)\r\n    // check https://github.com/AaronCCWong/react-card-flip for 'react-card-flip' details\r\n    <ReactCardFlip isFlipped={targetState.isFlipped}>\r\n      {/* Front side */}\r\n      <Card\r\n        className=\"memoryGameCardsContainer___card\"\r\n        onClick={() => handleClick(targetState)}\r\n      >\r\n        <img\r\n          src={questionMark}\r\n          alt=\"Green question mark\"\r\n          className=\"memoryGameCardsContainer___card___image\"\r\n        />\r\n      </Card>\r\n      {/* Back side */}\r\n      <Card\r\n        className={`memoryGameCardsContainer___card ${\r\n          targetState.isFlipped ? \"memoryGameCardsContainer___flippedCard\" : \"\"\r\n        }`}\r\n      >\r\n        <img\r\n          src={targetState.img.src}\r\n          alt={targetState.description}\r\n          className=\"memoryGameCardsContainer___card___image\"\r\n        />\r\n        <figcaption className=\"memoryGameCardsContainer___card___figcaption\">\r\n          {targetState.description}\r\n        </figcaption>\r\n      </Card>\r\n    </ReactCardFlip>\r\n  );\r\n};\r\n\r\nexport default FlippableCard;\r\n","import React from \"react\";\r\nimport { Card } from \"antd\";\r\nimport memoryGameSuccessSymbol from \"../../../images/memoryGameSuccessSymbol.svg\";\r\nimport \"./index.css\";\r\n\r\n// SuccessCard takes places of successfully matched cards\r\nconst SuccessCard = () => {\r\n  return (\r\n    <Card className=\"successCard\">\r\n      <img\r\n        src={memoryGameSuccessSymbol}\r\n        alt=\"Success symbol\"\r\n        className=\"successCard__image\"\r\n      />\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default SuccessCard;\r\n","import React from \"react\";\r\nimport { Col } from \"antd\";\r\nimport FlippableCard from \"../MemoryGameFlippableCard\";\r\nimport SuccessCard from \"../MemoryGameSuccessCard\";\r\nimport \"./index.css\";\r\n\r\nconst GameCards = ({\r\n  // An array of state objects. To see an example of cardStates check MemoryGameBoard/index.jsx\r\n  cardStates,\r\n  setCardStates,\r\n  // An array of clicked card state objects.\r\n  setSelectedCards,\r\n  selectedCards,\r\n}) => {\r\n  return (\r\n    <>\r\n      {cardStates.map((cardState) => {\r\n        let card;\r\n        if (cardState.isMatched) {\r\n          // an unclickable card with a success symbol on it\r\n          card = <SuccessCard />;\r\n        } else {\r\n          card = (\r\n            <FlippableCard\r\n              targetState={cardState}\r\n              cardStates={cardStates}\r\n              setCardStates={setCardStates}\r\n              selectedCards={selectedCards}\r\n              setSelectedCards={setSelectedCards}\r\n            />\r\n          );\r\n        }\r\n        return (\r\n          <Col xs={8} sm={6} lg={4} xxl={3} key={cardState.cardKey}>\r\n            {card}\r\n          </Col>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GameCards;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./index.css\";\r\nimport { Col, Modal, Row } from \"antd\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport invariant from \"invariant\";\r\nimport cardInitialStateGenerator from \"../cardInitialStateGenerator\";\r\nimport { invertCardStateForKey } from \"../gameHelpers\";\r\nimport ScrollToFacts from \"../MemoryGameScrollToFacts\";\r\nimport QuestionMarkIcon from \"../MemoryGameQuestionMarkIcon\";\r\nimport GameCards from \"../MemoryGameCards\";\r\nimport i18n from \"i18next\";\r\n\r\nconst NUM_REQUIRED_MATCHES = 2;\r\n// game example: https://www.brightfocus.org/alzheimers/memory-games/match-pictures\r\n// instead of squares this game uses cards.\r\n// Card flips on click to show what is behind.\r\n// matchedCards is an array states that holds successfully matched card states\r\n// setMatchedCards is setter of matchedCards\r\n// setIsGameCompleted is a function that is being used to set isGameCompleted as,\r\n// boolean(true) state when all possible matches made.\r\nconst MemoryGameBoard = ({\r\n  setFinishedCards,\r\n  finishedCards,\r\n  setIsGameCompleted,\r\n}) => {\r\n  const currLanguage = i18n.language;\r\n  const [t] = useTranslation();\r\n  // cardsDataArr example [{description:\"...\",link:\"...\",phrase:\"..\"},...]\r\n  const cardsDataArr = [\r\n    ...t(\"games.memoryGame.cards\", {\r\n      returnObjects: true,\r\n    }),\r\n  ];\r\n  // cardStates is an array of states with multiple properties\r\n  // state example :\r\n  // {\r\n  //    cardKey:\"\",\r\n  //    img:{src:\"\",imgKey:\"\"},\r\n  //    isFlipped:false,\r\n  //    isMatched:false,\r\n  //    description:\"\",\r\n  //    link:\"\",\r\n  //    phrase:\"\"\r\n  // }\r\n  const [cardStates, setCardStates] = useState(\r\n    cardInitialStateGenerator(cardsDataArr, NUM_REQUIRED_MATCHES)\r\n  );\r\n  // selectedCards is an array of clicked card states(objects).\r\n  // selectedCards array hold only \"NUM_REQUIRED_MATCHES\" amount of card states\r\n  const [selectedCards, setSelectedCards] = useState([]);\r\n  // Checks if two cards have a matching image.\r\n  const areCardsMatching = (card, firstCard) => {\r\n    return card.img.imgKey === firstCard.img.imgKey;\r\n  };\r\n  // Triggered when user clicks on a card(selectedCards change)\r\n  // checks selected cards to see if they are a match\r\n  useEffect(() => {\r\n    invariant(\r\n      selectedCards.length <= NUM_REQUIRED_MATCHES,\r\n      \"SelectedCards.length can't be more than NUM_REQUIRED_MATCHES\"\r\n    );\r\n    // prevents any action to be taken if there isn't enough clicked card\r\n    if (selectedCards.length !== NUM_REQUIRED_MATCHES) {\r\n      return;\r\n    }\r\n    const isThereMatch = selectedCards.every((card) => {\r\n      return areCardsMatching(card, ...selectedCards);\r\n    });\r\n    if (isThereMatch) {\r\n      // When isThereMatched condition is provided all cards are same.\r\n      // Because selectedCards gets resetted after every successful or unsuccessful match.\r\n      selectedCards.forEach((matchedCard) => {\r\n        // isMatched property of each card state in selectedCard get changed into true\r\n        // this makes success card to appear instead of flippable card\r\n        invertCardStateForKey(\r\n          \"isMatched\",\r\n          matchedCard,\r\n          cardStates,\r\n          setCardStates\r\n        );\r\n      });\r\n      // matchedCards hold successfuly matched card states and uses them to display facts\r\n      // to prevent fact duplication only 1 matched card should be passed into matchedCards\r\n      setFinishedCards((prevState) => [...prevState, selectedCards[0]]);\r\n    } else {\r\n      selectedCards.forEach((unmatchedCard) => {\r\n        // before this step handleClick made isFlipped property of all selected cards true.\r\n        // since match failed now,\r\n        // isMatched property of each card state in selectedCard get changed into false\r\n        // This makes cards to flip back\r\n        invertCardStateForKey(\r\n          \"isFlipped\",\r\n          unmatchedCard,\r\n          cardStates,\r\n          setCardStates\r\n        );\r\n      });\r\n    }\r\n    setSelectedCards([]);\r\n  }, [selectedCards, setFinishedCards, cardStates]);\r\n\r\n  // displays a modal when victory condition achieved\r\n  useEffect(() => {\r\n    const MAX_MATCHES = cardStates.length / NUM_REQUIRED_MATCHES;\r\n    if (finishedCards.length === MAX_MATCHES) {\r\n      setIsGameCompleted(true);\r\n      Modal.success({\r\n        content: \"You have completed the game!\",\r\n      });\r\n    }\r\n  }, [finishedCards, cardStates.length, setIsGameCompleted]);\r\n\r\n  return (\r\n    <div>\r\n      <Row align=\"middle\" className=\"howToPlayPopoverAndScrollToFactsRow\">\r\n        <Col span={5}>\r\n          <ScrollToFacts />\r\n        </Col>\r\n        <Col\r\n          // arabic language causes screen to be reverted. New layout required for arabic\r\n          xs={\r\n            currLanguage === \"ar\"\r\n              ? { span: 2, pull: 18 }\r\n              : { span: 2, push: 17 }\r\n          }\r\n        >\r\n          <QuestionMarkIcon />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <GameCards\r\n          cardStates={cardStates}\r\n          setCardStates={setCardStates}\r\n          selectedCards={selectedCards}\r\n          setSelectedCards={setSelectedCards}\r\n        />\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MemoryGameBoard;\r\n","import React, { useState } from \"react\";\r\nimport \"./index.css\";\r\nimport { Col, Row } from \"antd\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport Confetti from \"react-dom-confetti\";\r\nimport confettiConfig from \"../../components/memorygame/confettiConfig\";\r\nimport MemoryGameFactList from \"../../components/memorygame/MemoryGameFactList\";\r\nimport MemoryGameBoard from \"../../components/memorygame/MemoryGameBoard\";\r\n\r\nconst MemoryGamePage = () => {\r\n  const [t] = useTranslation();\r\n  const [isGameCompleted, setIsGameCompleted] = useState(false);\r\n  // finishedCards is being used to display environmental facts.\r\n  // It is an array of object(states).Each object is a successfully matched card state.\r\n  // When a match is made successfully only state of first card gets pushed inside finishedCards.\r\n  // Because matched cards have same state. Otherwise same fact would be displayed twice.\r\n  const [finishedCards, setFinishedCards] = useState([]);\r\n\r\n  return (\r\n    <Row justify=\"center\" className=\"memoryGameContainer\">\r\n      {/* Confetti displays confetti effect to congratulate user when game is completed */}\r\n      {/* Check https://github.com/daniel-lundin/react-dom-confetti for 'react-dom-confetti' */}\r\n      <Confetti active={isGameCompleted} config={confettiConfig} />\r\n      <Col xs={22} md={20} xl={17}>\r\n        <h1 className=\"memoryGameContainer__title\">\r\n          {t(\"games.memoryGame.title\")}\r\n        </h1>\r\n        <h3 className=\"memoryGameContainer__description\">\r\n          {t(\"games.memoryGame.header\")}\r\n        </h3>\r\n        <Row justify=\"center\">\r\n          <MemoryGameBoard\r\n            setFinishedCards={setFinishedCards}\r\n            finishedCards={finishedCards}\r\n            setIsGameCompleted={setIsGameCompleted}\r\n          />\r\n        </Row>\r\n      </Col>\r\n      <Col xs={20}>\r\n        <Confetti active={isGameCompleted} config={confettiConfig} />\r\n        <MemoryGameFactList facts={finishedCards} />\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default MemoryGamePage;\r\n","import React from \"react\";\r\nimport \"./index.css\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport i18next from \"i18next\";\r\nimport { Progress, Row, Col } from \"antd\";\r\nimport { QuestionOutlined } from \"@ant-design/icons\";\r\n\r\n// Antd Col spans. Arabic language requires different grid setup. This object makes conditional grid setting easier.\r\nconst GRID_SPANS = {\r\n  currLevel: 7,\r\n  progressBar: 10,\r\n  nextLevel: 7,\r\n  previousReward: { span: 8, offset: 3 },\r\n  nextReward: { span: 8, offset: 2 },\r\n};\r\n\r\nconst ProgressSection = ({\r\n  // an object\r\n  // check containers/GamesPage/index.jsx to see an example\r\n  progressData,\r\n}) => {\r\n  const nextLevel = progressData.currentLevel + 1;\r\n  const [t] = useTranslation();\r\n  const currentLanguage = i18next.language;\r\n\r\n  // Since changing language to arabic revert page layout, previously defined offsets cause misalignments\r\n  if (currentLanguage === \"ar\") {\r\n    GRID_SPANS.previousReward = { span: 8, pull: 4 };\r\n    GRID_SPANS.nextReward = { span: 8, pull: 4 };\r\n  }\r\n\r\n  return (\r\n    <div className=\"progressSectionContainer\">\r\n      <Row justify=\"center\">\r\n        <h3 className=\"progressSectionContainer___xp\">\r\n          {/* example: 50/100 Experience Point */}\r\n          {t(\"gamesPage.experiencePoint\", {\r\n            currentXP: progressData.currentXP,\r\n          })}\r\n        </h3>\r\n      </Row>\r\n      <Row justify=\"center\" className=\"progressSectionContainer___row\">\r\n        <Col xs={GRID_SPANS.currLevel}>\r\n          <h3\r\n            className={`progressSectionContainer___row___header ${\r\n              // Arabic reverts positions of level texts. Adaptive class naming is required for appropriate alignment and padding.\r\n              currentLanguage === \"ar\"\r\n                ? \"progressSectionContainer___row___rightSideLevel\"\r\n                : \"progressSectionContainer___row___leftSideLevel\"\r\n            }`}\r\n          >\r\n            {/* example: Level 5 */}\r\n            {t(\"gamesPage.level\", {\r\n              currentLevel: progressData.currentLevel,\r\n            })}\r\n          </h3>\r\n        </Col>\r\n        <Col xs={GRID_SPANS.progressBar}>\r\n          <Progress\r\n            percent={progressData.currentXP}\r\n            className=\"progressSectionContainer___row___progressBar\"\r\n            strokeColor=\"#4BA747\"\r\n            trailColor=\"white\"\r\n            strokeWidth={20}\r\n            showInfo={false}\r\n          />\r\n        </Col>\r\n        <Col xs={GRID_SPANS.nextLevel}>\r\n          <h3\r\n            className={`progressSectionContainer___row___header ${\r\n              currentLanguage === \"ar\"\r\n                ? \"progressSectionContainer___row___leftSideLevel\"\r\n                : \"progressSectionContainer___row___rightSideLevel\"\r\n            }`}\r\n          >\r\n            {t(\"gamesPage.level\", { currentLevel: nextLevel })}\r\n          </h3>\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"progressSectionContainer___row\">\r\n        <Col xs={GRID_SPANS.previousReward}>\r\n          <h3 className=\"progressSectionContainer___row___header\">\r\n            {t(\"gamesPage.previousReward\")}\r\n          </h3>\r\n          <div className=\"progressSectionContainer___row___prevRewardDiv\">\r\n            <img\r\n              src={progressData.prevRewardIcon}\r\n              alt={t(\"gamesPage.badgeDescription\")}\r\n              className=\"progressSectionContainer___row___prevRewardDiv___reward\"\r\n            />\r\n          </div>\r\n          <h3 className=\"progressSectionContainer___row___header\">\r\n            {/* Example: Recycle badge */}\r\n            {t(\"gamesPage.badgeDescription\")}\r\n          </h3>\r\n        </Col>\r\n        <Col xs={GRID_SPANS.nextReward}>\r\n          <h3 className=\"progressSectionContainer___row___header\">\r\n            {t(\"gamesPage.nextReward\")}\r\n          </h3>\r\n          <div className=\"progressSectionContainer___row___header___questionMark\">\r\n            <QuestionOutlined />\r\n          </div>\r\n\r\n          <h3 className=\"progressSectionContainer___row___header\">\r\n            {/* Reward for next level is unknown. */}\r\n            {t(\"gamesPage.unknownNextReward\")}\r\n          </h3>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProgressSection;\r\n","import React from \"react\";\r\nimport { Row, Col, Card } from \"antd\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport \"./index.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst GamesPageImageGrid = ({\r\n  // an object. Check containers/GamesPage/index.jsx to see details\r\n  gameData,\r\n}) => {\r\n  const [t] = useTranslation();\r\n  const { Meta } = Card;\r\n  const gamePosters = Object.values(gameData).map((gameObj) => {\r\n    return (\r\n      <Col\r\n        key={gameObj.gameTitle}\r\n        xs={24}\r\n        md={8}\r\n        className=\"gamePageImageGrid__col\"\r\n      >\r\n        <div className=\"gamePageImageGrid__col__link\">\r\n          <Link to={`games/${gameObj.route}`}>\r\n            <Card\r\n              hoverable\r\n              className=\"gamePageImageGrid__col__link__card\"\r\n              cover={\r\n                <img\r\n                  alt={gameObj.gameTitle}\r\n                  src={gameObj.imgSrc}\r\n                  className=\"gamePageImageGrid__col__link__card__img\"\r\n                />\r\n              }\r\n            >\r\n              <Meta\r\n                title={\r\n                  <h3 className=\"gamePageImageGrid__col__link__card__title\">\r\n                    {gameObj.gameTitle}\r\n                  </h3>\r\n                }\r\n              />\r\n            </Card>\r\n          </Link>\r\n        </div>\r\n      </Col>\r\n    );\r\n  });\r\n  return (\r\n    <div className=\"gamePageImageGrid\">\r\n      <h1 className=\"gamePageImageGrid__title\">{t(\"gamesPage.title\")}</h1>\r\n      <Row>{gamePosters}</Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GamesPageImageGrid;\r\n","import React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport ProgressSection from \"../../components/gamespage/GamesPageProgressSection\";\r\nimport GamesPageImageGrid from \"../../components/gamespage/GamesPageImageGrid\";\r\nimport BottomCurve from \"../../components/BottomCurve\";\r\nimport memoryGame from \"../../images/gameImages/memoryGame.svg\";\r\nimport puzzleGame from \"../../images/gameImages/puzzleGame.svg\";\r\nimport quizGame from \"../../images/gameImages/quizGame.svg\";\r\nimport worldIcon from \"../../images/world.svg\";\r\n\r\nconst GAME_SCREENSHOTS = [memoryGame, puzzleGame, quizGame];\r\n\r\nconst GamesPage = () => {\r\n  const [t] = useTranslation();\r\n  // agreed naming is as follows:\r\n  // image file name: memoryGame\r\n  // game title key in locales: memoryGame.title\r\n  // game route: memorygame\r\n  const gamePostersObj = {};\r\n  // gameScreenshotDir example: /static/media/memoryGame.84fe967a.svg\r\n  for (const gameScreenshotDir of GAME_SCREENSHOTS) {\r\n    const screenshotDirParts = gameScreenshotDir.split(\"/\");\r\n    // example: memoryGame.84fe967a.svg\r\n    const lastScreenshotDirPart =\r\n      screenshotDirParts[screenshotDirParts.length - 1];\r\n    // example: memoryGame\r\n    const screenshotName = lastScreenshotDirPart.split(\".\")[0];\r\n    const gameRoute = screenshotName.toLowerCase();\r\n    gamePostersObj[screenshotName] = {\r\n      route: gameRoute,\r\n      imgSrc: gameScreenshotDir,\r\n      // example: Memory game\r\n      gameTitle: t(`games.${screenshotName}.title`),\r\n    };\r\n  }\r\n\r\n  const PLACEHOLDER_PROGRESS_DATA = {\r\n    currentLevel: 3,\r\n    currentXP: 40,\r\n    prevRewardIcon: worldIcon,\r\n  };\r\n  return (\r\n    <>\r\n      <ProgressSection progressData={PLACEHOLDER_PROGRESS_DATA} />\r\n      <BottomCurve />\r\n      <GamesPageImageGrid gameData={gamePostersObj} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GamesPage;\r\n","import React from \"react\";\r\nimport { Card, Row, Avatar } from \"antd\";\r\nimport { LinkedinFilled, GithubFilled } from \"@ant-design/icons\";\r\nimport \"./index.css\";\r\n\r\n// Props passed to this function are details of team members\r\nconst MemberCard = ({ name, role, bio, avatarUrl, linkedinUrl, githubUrl }) => {\r\n  return (\r\n    <Card span={6} size=\"default\" className=\"memberCard\" bordered={false}>\r\n      <div className=\"memberCard__header\">\r\n        <Avatar\r\n          className=\"memberCard__header__avatar\"\r\n          size={120}\r\n          src={avatarUrl}\r\n          shape=\"circle\"\r\n          alt={name}\r\n        />\r\n        <Row className=\"memberCard__header__name\">{name}</Row>\r\n        <Row className=\"memberCard__header__role\">{role}</Row>\r\n      </div>\r\n\r\n      <Row className=\"memberCard__bio\">{bio}</Row>\r\n      <Row className=\"memberCard__socialMedia\">\r\n        <a className=\"memberCard__socialMedia--linkedin\" href={linkedinUrl}>\r\n          <LinkedinFilled />\r\n        </a>\r\n        <a className=\"memberCard__socialMedia--github\" href={githubUrl}>\r\n          <GithubFilled />\r\n        </a>\r\n      </Row>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default MemberCard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport db from \"./../../firebaseConfig\";\r\nimport MemberCard from \"./../MemberCard\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Row } from \"antd\";\r\nimport \"./index.css\";\r\n\r\nconst TeamCards = () => {\r\n  const [t] = useTranslation();\r\n  const [dataState, setDataState] = useState([]);\r\n\r\n  const fetchData = async () => {\r\n    const res = await db.collection(\"team\").doc(\"teamInfo\").get();\r\n    const data = res.data();\r\n    setDataState(data.info);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"ourTeam\">\r\n      <Row className=\"ourTeam__Header\">{t(\"about.ourTeam\")}</Row>\r\n      <Row className=\"ourTeam__teamCards\">\r\n        {dataState.map((member) => (\r\n          <MemberCard\r\n            key={member.name + \"Card\"}\r\n            name={t(`about.teamInfo.${member.name}.name`)}\r\n            avatarUrl={member.avatar}\r\n            bio={t(`about.teamInfo.${member.name}.bio`)}\r\n            role={t(`about.teamInfo.${member.name}.role`)}\r\n            linkedinUrl={member.linkedin}\r\n            githubUrl={member.github}\r\n          />\r\n        ))}\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TeamCards;\r\n","import React from \"react\";\r\nimport { Row, Col } from \"antd\";\r\nimport kid0Img from \"./../../images/aboutPage/kid-1.png\";\r\nimport kid1Img from \"./../../images/aboutPage/kid-2.png\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport TeamCards from \"./../../components/TeamCards\";\r\nimport \"./index.css\";\r\n\r\nconst AboutPage = () => {\r\n  const [t] = useTranslation();\r\n  // This in-line styling is added to fix the display of the illustrations in Arabic\r\n  const illustrationStyling = {\r\n    flexDirection: document.dir === \"rtl\" ? \"row-reverse\" : \"row\",\r\n  };\r\n\r\n  return (\r\n    <div className=\"aboutUs\">\r\n      <Row className=\"aboutUs__upperContent\">\r\n        <Col className=\"aboutUs__textCol\">\r\n          <Row className=\"aboutUs__textCol--aboutText\">\r\n            <h2 className=\"aboutUs__textCol--aboutHeader\">\r\n              {t(\"about.aboutUsHeader\")}\r\n            </h2>\r\n            <p className=\"aboutUs__textCol--aboutParagraph\">\r\n              {t(\"about.aboutUsText\")}\r\n            </p>\r\n          </Row>\r\n          <Row className=\"aboutUs__textCol--whyWeDoIt\">\r\n            <h2 className=\"aboutUs__textCol--whyWeDoItHeader\">\r\n              {t(\"about.whyWeDoItHeader\")}\r\n            </h2>\r\n            <p className=\"aboutUs__textCol--whyWeDoItParagraph\">\r\n              {t(\"about.whyWeDoItText\")}\r\n            </p>\r\n          </Row>\r\n        </Col>\r\n        <Col className=\"aboutUs__illustrationsCol\" style={illustrationStyling}>\r\n          <img\r\n            className=\"aboutUs__illustrationsCol--kid0\"\r\n            src={kid0Img}\r\n            alt=\"kid-illustration\"\r\n          />\r\n          <img\r\n            className=\"aboutUs__illustrationsCol--kid1\"\r\n            src={kid1Img}\r\n            alt=\"kid-illustration\"\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"team\">\r\n        <TeamCards />\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AboutPage;\r\n","import React from \"react\";\r\nimport \"./index.css\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst ContactUsHeaderSection = () => {\r\n  const { t } = useTranslation();\r\n  return (\r\n    <div className=\"contactUs__headerSection\">\r\n      <h2 className=\"contactUs__headerSection__title\">\r\n        {t(\"contact.headerSection.title\")}\r\n      </h2>\r\n      <p className=\"contactUs__headerSection__context\">\r\n        {t(\"contact.headerSection.subtitle\")}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactUsHeaderSection;\r\n","import React, { useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Col, Row } from \"antd\";\r\nimport \"./index.css\";\r\nimport { SyncOutlined } from \"@ant-design/icons\";\r\nimport { message } from \"antd\";\r\n\r\n// Converts object to proper form data(string)\r\nconst encodeFormData = (data) => {\r\n  return Object.keys(data)\r\n    .map((key) => encodeURIComponent(key) + \"=\" + encodeURIComponent(data[key]))\r\n    .join(\"&\");\r\n};\r\n\r\nconst ContactUsForm = () => {\r\n  const [t] = useTranslation();\r\n  const [formValue, setFormValue] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    message: \"\",\r\n  });\r\n\r\n  // The change in isLoading state triggers SyncOutlined icon spinning\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const handleChange = (e) => setFormValue({ [e.target.name]: e.target.value });\r\n\r\n  // application/x-www-form-urlencoded stands for POST data at HTTP.\r\n  // body represents HTTP message and send data to server in a query string format.\r\n  // encode is used for passing the string to the body\r\n  // setTimeOut stands for showing post submission message about a time after submit\r\n  const handleSubmit = (e) => {\r\n    setIsLoading(true);\r\n    e.preventDefault();\r\n    fetch(\"/\", {\r\n      method: \"POST\",\r\n      \"data-netlify\": \"true\",\r\n      headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\r\n      body: encodeFormData({ \"form-name\": \"contact\", ...formValue }),\r\n    })\r\n      .then(() => {\r\n        setIsLoading(false);\r\n        message.success({\r\n          content: t(\"contact.contactUsForm.postSubmissionMessage\"),\r\n          className: \"contactUsForm__postSubmissionMessage\",\r\n        });\r\n        setFormValue({\r\n          name: \"\",\r\n          email: \"\",\r\n          message: \"\",\r\n        });\r\n      })\r\n      .catch((error) => message.error(error));\r\n  };\r\n\r\n  return (\r\n    <div className=\"contactUsFormContainer\">\r\n      <form onSubmit={handleSubmit}>\r\n        <Col>\r\n          <Col>\r\n            <label className=\"contactUsForm__label\">\r\n              {t(\"contact.contactUsForm.name\")}\r\n            </label>\r\n          </Col>\r\n          <Col>\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={formValue.name}\r\n              onChange={handleChange}\r\n              className=\"contactUsForm__input\"\r\n              required\r\n            />\r\n          </Col>\r\n        </Col>\r\n        <Col>\r\n          <Col>\r\n            <label className=\"contactUsForm__label\">\r\n              {t(\"contact.contactUsForm.email\")}\r\n            </label>\r\n          </Col>\r\n          <Col>\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              value={formValue.email}\r\n              onChange={handleChange}\r\n              className=\"contactUsForm__input\"\r\n              required\r\n            />\r\n          </Col>\r\n        </Col>\r\n        <Col>\r\n          <Col>\r\n            <label className=\"contactUsForm__label\">\r\n              {t(\"contact.contactUsForm.message\")}\r\n            </label>\r\n          </Col>\r\n          <Col>\r\n            <textarea\r\n              name=\"message\"\r\n              value={formValue.message}\r\n              onChange={handleChange}\r\n              className=\"contactUsForm__textarea\"\r\n              required\r\n            />\r\n          </Col>\r\n        </Col>\r\n        <Row>\r\n          <div className=\"contactUsForm__submit\">\r\n            <button type=\"submit\" className=\"contactUsForm__submitButton\">\r\n              {t(\"contact.contactUsForm.send\")}\r\n              <span>\r\n                <SyncOutlined spin={isLoading} />\r\n              </span>\r\n            </button>\r\n          </div>\r\n        </Row>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactUsForm;\r\n","import React from \"react\";\r\nimport contactUsBottomImgRight_0 from \"../../images/child.png\";\r\nimport contactUsBottomImgRight_1 from \"../../images/child_2.png\";\r\nimport contactUsBottomImgLeft from \"../../images/family.png\";\r\nimport \"./index.css\";\r\n\r\nconst ContactUsBottom = () => {\r\n  return (\r\n    <div className=\"contactUsBottomContainer\">\r\n      <div className=\"contactUsBottomContainer__bottomCurve\">\r\n        <div className=\"contactUsBottomContainer__bottomCurve__topHalf\">\r\n          <div className=\"contactUsBottomContainer__bottomCurve__topHalfImages\">\r\n            <img\r\n              className=\"contactUsBottomContainer__bottomCurve__topHalfImages--mainImg\"\r\n              alt=\"Two children playing in the garden\"\r\n              src={contactUsBottomImgLeft}\r\n            />\r\n\r\n            <img\r\n              className=\"contactUsBottomContainer__bottomCurve__topHalfImages--subImgOne\"\r\n              alt=\"Girl playing in the garden\"\r\n              src={contactUsBottomImgRight_0}\r\n            />\r\n\r\n            <img\r\n              className=\"contactUsBottomContainer__bottomCurve__topHalfImages--subImgTwo\"\r\n              alt=\"Boy playing in the garden\"\r\n              src={contactUsBottomImgRight_1}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"contactUsBottomContainer__bottomCurve__bottomHalf\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactUsBottom;\r\n","import React from \"react\";\r\nimport ContactUsHeaderSection from \"../../components/ContactUsHeaderSection\";\r\nimport ContactUsForm from \"../../components/ContactUsForm\";\r\nimport ContactUsBottom from \"../../components/ContactUsBottom\";\r\n\r\nconst ContactPage = () => {\r\n  return (\r\n    <>\r\n      <ContactUsHeaderSection />\r\n      <ContactUsForm />\r\n      <ContactUsBottom />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactPage;\r\n","// we fetch those questions from opentdb website. we can pick the type of questions,the amount and the dificulty.\r\n// here we have a 10 questions as an amount, nature as a category ,easy, middle and hard for the difficulty and multiple choices as a type.\r\n// iam fetching data from a website called opentdb.com this website will give us a simple questions about the nature.\r\n// this is an example of the game https://lovattspuzzles.com/online-puzzles-competitions/ultimate-online-trivia-quiz.\r\nimport shuffle from \"../../components/memorygame/shuffle.jsx\";\r\n\r\nconst NATURE_CATEGORY = 17;\r\n\r\nexport const fetchQuizQuestions = async (amount, difficulty) => {\r\n  const endpoint = `https://opentdb.com/api.php?amount=${amount}&category=${NATURE_CATEGORY}&difficulty=${difficulty}&type=multiple`;\r\n  const data = await (await fetch(endpoint)).json();\r\n  return data.results.map((question) => ({\r\n    ...question,\r\n    answers: shuffle([...question.incorrect_answers, question.correct_answer]),\r\n  }));\r\n};\r\n","import React from \"react\";\r\nimport \"./index.css\";\r\n\r\n// this function will display the fetched data to the dom.those parameters will pass in quizgame component.\r\n// the callback is used to check if the answer is true or not.\r\n// types of props = {\r\n//  question: string\r\n//  answerChoices: string\r\n//  handleClick: function\r\n//  userAnswer: string\r\n//  questionNum: number\r\n//  totalQuestions: number\r\n//}\r\nconst QuestionCard = ({\r\n  question,\r\n  answerChoices,\r\n  handleClick,\r\n  questionNum,\r\n  totalQuestions,\r\n}) => (\r\n  <div className=\"quizQuestionWrapper\">\r\n    <p className=\"quizQuestionWrapper__numOfQuizQuestion\">\r\n      Question: {questionNum} / {totalQuestions}\r\n    </p>\r\n    <p dangerouslySetInnerHTML={{ __html: question }} />\r\n    <div>\r\n      {answerChoices.map((answer) => (\r\n        <div key={answer}>\r\n          <button\r\n            className=\"quizQuestionWrapper__userAnswer\"\r\n            value={answer}\r\n            onClick={handleClick}\r\n          >\r\n            <span dangerouslySetInnerHTML={{ __html: answer }} />\r\n          </button>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  </div>\r\n);\r\nexport default QuestionCard;\r\n","import React, { useState } from \"react\";\r\nimport { fetchQuizQuestions } from \"../../components/QuizGameApi\";\r\nimport QuestionCard from \"../../components/QuizGameQuestions\";\r\nimport \"./index.css\";\r\n\r\nconst DIFFICULTY = {\r\n  EASY: \"easy\",\r\n  MEDIUM: \"medium\",\r\n  HARD: \"hard\",\r\n};\r\n\r\nconst TOTAL_QUESTIONS = 10;\r\n\r\nconst QuizGame = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [questions, setQuestions] = useState([]);\r\n  const [currentQuestionNumber, setCurrentQuestionNumber] = useState(0);\r\n  const [userAnswers, setUserAnswers] = useState([]);\r\n  const [score, setScore] = useState(0);\r\n  const [isGameStart, setIsGameStart] = useState(false);\r\n\r\n  const startQuiz = async () => {\r\n    setIsLoading(true);\r\n    setIsGameStart(true);\r\n    const newQuestions = await fetchQuizQuestions(\r\n      TOTAL_QUESTIONS,\r\n      DIFFICULTY.EASY\r\n    );\r\n    setQuestions(newQuestions);\r\n    setScore(0);\r\n    setUserAnswers([]);\r\n    setCurrentQuestionNumber(0);\r\n    setIsLoading(false);\r\n  };\r\n\r\n  const checkAnswer = (e) => {\r\n    if (isGameStart) {\r\n      const userChosenAnswer = e.currentTarget.value;\r\n      const solutionAnswer = questions[currentQuestionNumber].correct_answer;\r\n      const isCorrect = solutionAnswer === userChosenAnswer;\r\n      if (isCorrect) {\r\n        setScore((prev) => prev + 1);\r\n        const answerObject = {\r\n          question: questions[currentQuestionNumber].question,\r\n          userChosenAnswer: e.currentTarget.value,\r\n          isCorrect: solutionAnswer === userChosenAnswer,\r\n          correctAnswer: questions[currentQuestionNumber].correct_answer,\r\n        };\r\n        setUserAnswers((prev) => [...prev, answerObject]);\r\n      }\r\n    }\r\n  };\r\n\r\n  const nextQuestion = () => {\r\n    const nextQNum = currentQuestionNumber + 1;\r\n    if (nextQNum >= TOTAL_QUESTIONS) {\r\n      // the start button will appear again after the user finish ten questions and of course to start the game.\r\n      setIsGameStart(true);\r\n    } else {\r\n      setCurrentQuestionNumber(nextQNum);\r\n    }\r\n  };\r\n\r\n  const shouldStartGameAgain =\r\n    !isGameStart || userAnswers.length === TOTAL_QUESTIONS;\r\n  const isGameReady = isGameStart && !isLoading;\r\n  const isUserOnLastQuestion =\r\n    userAnswers.length === currentQuestionNumber + 1 &&\r\n    currentQuestionNumber !== TOTAL_QUESTIONS - 1;\r\n  const isThereAnotherQuestion = isGameReady && isUserOnLastQuestion;\r\n\r\n  return (\r\n    <>\r\n      <div className=\"quizWrapper\">\r\n        <h1 className=\"quizWrapper__header\">Quiz Game</h1>\r\n        {shouldStartGameAgain && (\r\n          <button className=\"quizWrapper__startGame\" onClick={startQuiz}>\r\n            Start\r\n          </button>\r\n        )}\r\n        {isGameStart && <p className=\"quizWrapper__score\">Score: {score}</p>}\r\n        {isLoading && <p>Loading Questions...</p>}\r\n        {isGameReady && (\r\n          <QuestionCard\r\n            questionNum={currentQuestionNumber + 1}\r\n            totalQuestions={TOTAL_QUESTIONS}\r\n            question={questions[currentQuestionNumber].question}\r\n            answerChoices={questions[currentQuestionNumber].answers}\r\n            handleClick={checkAnswer}\r\n          />\r\n        )}\r\n        {isThereAnotherQuestion && (\r\n          <button className=\"quizWrapper__nextButton\" onClick={nextQuestion}>\r\n            Next question\r\n          </button>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default QuizGame;\r\n","import React from \"react\";\r\nimport QuizGame from \"../../components/QuizGame\";\r\n\r\nconst QuizGamePage = () => {\r\n  return (\r\n    <>\r\n      <QuizGame />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default QuizGamePage;\r\n","import React from \"react\";\r\nimport \"./index.css\";\r\nimport { firebaseStorage } from \"../../firebaseConfig\";\r\n\r\nconst handleDownloadFileFromFirebaseStorage = async (resource) => {\r\n  try {\r\n    let url = await firebaseStorage\r\n      .storage()\r\n      .refFromURL(resource)\r\n      .getDownloadURL();\r\n    window.open(url);\r\n  } catch (e) {\r\n    console.error(e);\r\n    alert(`Couldn't get the download link`);\r\n  }\r\n};\r\n\r\nconst Resource = ({ resource }) => {\r\n  if (!resource) {\r\n    return <h2>Loading</h2>;\r\n  } else {\r\n    return (\r\n      <div className=\"resource__body\">\r\n        <div className=\"resource__body__picContainer\">\r\n          <img\r\n            src={resource.pic}\r\n            alt={resource.title}\r\n            onClick={() => {\r\n              handleDownloadFileFromFirebaseStorage(resource.url);\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"resource__body__content\">\r\n          <div className=\"resource__body__content__title\">{resource.title}</div>\r\n          <div className=\"resource__body__content__description\">\r\n            {resource.body}\r\n          </div>\r\n          <div className=\"resource__body__content__footer\">\r\n            <button\r\n              onClick={() => {\r\n                handleDownloadFileFromFirebaseStorage(resource.url);\r\n              }}\r\n            >\r\n              Visit Resource\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Resource;\r\n","import React, { useState } from \"react\";\r\nimport Resource from \"../../components/Resource\";\r\nimport \"./index.css\";\r\nimport ourClimateChange from \"../../images/ourClimateChange.png\";\r\nimport resourcesForEducation from \"../../images/resourcesForEducation.png\";\r\nimport whoCausesClimate from \"../../images/whoCausesClimate.png\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst ResourcesPage = () => {\r\n  const [t] = useTranslation();\r\n  const initResources = [\r\n    {\r\n      id: 1,\r\n      title: t(\"resourcesPage.resources.climateChangeHandbook.title\"),\r\n      body: t(\"resourcesPage.resources.climateChangeHandbook.text\"),\r\n      pic: ourClimateChange,\r\n      url:\r\n        \"gs://capstone-istanbul-juniper.appspot.com/ResourcesPage/Child friendly climate change handbook.pdf\",\r\n    },\r\n    {\r\n      id: 2,\r\n      title: t(\r\n        \"resourcesPage.resources.educationOnClimateChangeHandbook.title\"\r\n      ),\r\n      body: t(\"resourcesPage.resources.educationOnClimateChangeHandbook.text\"),\r\n      pic: resourcesForEducation,\r\n      url:\r\n        \"gs://capstone-istanbul-juniper.appspot.com/ResourcesPage/Resources list_Climate Change.pdf\",\r\n    },\r\n    {\r\n      id: 3,\r\n      title: t(\"resourcesPage.resources.whoCausesClimateChangesHandbook.title\"),\r\n      body: t(\"resourcesPage.resources.whoCausesClimateChangesHandbook.text\"),\r\n      pic: whoCausesClimate,\r\n      url:\r\n        \"gs://capstone-istanbul-juniper.appspot.com/ResourcesPage/creating-futures-lesson-4.pdf\",\r\n    },\r\n  ];\r\n  const [resources] = useState(initResources);\r\n  return (\r\n    <div className=\"resourcesPage\">\r\n      <div className=\"resourcesPage__headerContainer\">\r\n        <div className=\"resourcesPage__headerContainer__title\">\r\n          {t(\"resourcesPage.title\")}\r\n        </div>\r\n        <div className=\"resourcesPage__headerContainer__subTitle\">\r\n          {t(\"resourcesPage.aboutPage\")}\r\n        </div>\r\n      </div>\r\n      <div className=\"resourcesPage__resourcesContainer\">\r\n        {resources.map((resource) => {\r\n          return (\r\n            <Resource key={`resource_${resource.id}`} resource={resource} />\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResourcesPage;\r\n","export function validateEmail(email) {\r\n  // regex source https://emailregex.com/\r\n  const re = /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\r\n  return re.test(email);\r\n}\r\n\r\nexport const createErrorClassName = (error) => {\r\n  if (!error) {\r\n    return undefined;\r\n  }\r\n  return \"loginContainer__loginDialog__input__hasError\";\r\n};\r\n","import React from \"react\";\r\n\r\nconst ErrorMessage = ({ message }) => {\r\n  if (!message) {\r\n    return null;\r\n  }\r\n  return (\r\n    <div className=\"loginContainer__loginDialog__errorContainer\">{message}</div>\r\n  );\r\n};\r\n\r\nexport default ErrorMessage;\r\n","import { Alert, Input, Button } from \"antd\";\r\nimport React, { useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { validateEmail, createErrorClassName } from \"../registerHelper\";\r\nimport ErrorMessage from \"../ErrorMessage\";\r\nimport \"./index.css\";\r\n\r\nconst MIN_PASSWORD_LENGTH = 6;\r\n\r\nconst Login = ({\r\n  // check containers/LoginRegister/index.jsx to see details of functions\r\n  onSubmit,\r\n  handleFacebookAuth,\r\n  handleGoogleAuth,\r\n  handleRegister,\r\n  handlePasswordReset,\r\n  // string\r\n  error,\r\n  // string\r\n  message,\r\n}) => {\r\n  const [t] = useTranslation();\r\n  const [loginCredentials, setLoginCredentials] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const handleChange = (key, value) => {\r\n    const newValues = { ...loginCredentials };\r\n    newValues[key] = value;\r\n    setLoginCredentials(newValues);\r\n  };\r\n  const [errors, setErrors] = useState({});\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { email, password } = loginCredentials;\r\n    const newErrors = {};\r\n    if (!validateEmail(email)) {\r\n      newErrors.email = \"Email format error\";\r\n    }\r\n    if (email.trim() === \"\") {\r\n      newErrors.email = \"Please fill this field\";\r\n    }\r\n    if (password.trim().length < MIN_PASSWORD_LENGTH) {\r\n      newErrors.password = \"Password must be at least 6 characters long\";\r\n    }\r\n    if (password.trim() === \"\") {\r\n      newErrors.password = \"Please fill this field\";\r\n    }\r\n    setErrors(newErrors);\r\n    const errorNameArr = Object.keys(newErrors);\r\n    if (errorNameArr.length > 0) {\r\n      return;\r\n    }\r\n    onSubmit(loginCredentials);\r\n  };\r\n\r\n  return (\r\n    <form noValidate onSubmit={handleSubmit}>\r\n      <div className=\"loginContainer\">\r\n        <div className=\"loginContainer__loginTitle\">{t(\"login.login\")}</div>\r\n        {error && (\r\n          <Alert className=\"authAlert\" type=\"error\" showIcon message={error} />\r\n        )}\r\n        {message}\r\n        <div className=\"loginContainer__loginDialog\">\r\n          <div className=\"loginContainer__loginDialog__inputLabel\">\r\n            {t(\"login.email\")}\r\n          </div>\r\n          <div className=\"loginContainer__loginDialog__input\">\r\n            <Input\r\n              className={createErrorClassName(errors.email)}\r\n              type=\"email\"\r\n              value={loginCredentials.email}\r\n              onChange={(e) => {\r\n                handleChange(\"email\", e.target.value);\r\n              }}\r\n            />\r\n            <ErrorMessage message={errors.email} />\r\n          </div>\r\n          <div className=\"loginContainer__loginDialog__inputLabel\">\r\n            {t(\"login.password\")}\r\n          </div>\r\n          <div className=\"loginContainer__loginDialog__input\">\r\n            <Input\r\n              className={createErrorClassName(errors.password)}\r\n              type=\"password\"\r\n              value={loginCredentials.password}\r\n              onChange={(e) => {\r\n                handleChange(\"password\", e.target.value);\r\n              }}\r\n            />\r\n            <ErrorMessage message={errors.password} />\r\n          </div>\r\n          <div className=\"loginContainer__loginDialog__forgotPasswordContainer\">\r\n            <Button\r\n              type=\"link\"\r\n              onClick={(e) => {\r\n                e.preventDefault();\r\n                handlePasswordReset();\r\n              }}\r\n            >\r\n              {t(\"login.forgotPassword\")}\r\n            </Button>\r\n          </div>\r\n          <button\r\n            type=\"submit\"\r\n            className=\"loginContainer__loginDialog__submitButton\"\r\n          >\r\n            {t(\"login.login\")}\r\n          </button>\r\n          <div className=\"loginContainer__loginDialog__registerLabel\">\r\n            {t(\"login.new\")}\r\n          </div>\r\n          <button\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              handleRegister();\r\n            }}\r\n            type=\"button\"\r\n            className=\"loginContainer__loginDialog__registerButton\"\r\n          >\r\n            {t(\"login.creat\")}\r\n          </button>\r\n          <div className=\"loginContainer__loginDialog__loginOptionsTitle\">\r\n            {t(\"login.orYouCan\")}\r\n          </div>\r\n          <button\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              handleFacebookAuth();\r\n            }}\r\n            type=\"button\"\r\n            className=\"loginContainer__loginDialog__facebookLoginBtn\"\r\n          >\r\n            {t(\"login.withFacebook\")}\r\n          </button>\r\n          <button\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              handleGoogleAuth();\r\n            }}\r\n            type=\"button\"\r\n            className=\"loginContainer__loginDialog__googleLoginBtn\"\r\n          >\r\n            {t(\"login.withGoogle\")}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import { Alert, Button, Checkbox, Input } from \"antd\";\r\nimport Modal from \"antd/lib/modal/Modal\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport React, { useState } from \"react\";\r\nimport { validateEmail, createErrorClassName } from \"../registerHelper\";\r\nimport ErrorMessage from \"../ErrorMessage\";\r\n\r\nconst MIN_PASSWORD_LENGTH = 6;\r\n\r\nconst Register = ({\r\n  // check containers/LoginRegister/index.jsx to see details of functions\r\n  onSubmit,\r\n  handleLogin,\r\n  handleFacebookAuth,\r\n  handleGoogleAuth,\r\n  // string\r\n  error,\r\n}) => {\r\n  const [t] = useTranslation();\r\n  const [registerInformation, setRegisterInformation] = useState({\r\n    fullName: \"\",\r\n    age: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    isAgreed: false,\r\n  });\r\n  const [errors, setErrors] = useState({});\r\n  const [termsOpen, setTermsOpen] = useState(false);\r\n  const handleChange = (key, value) => {\r\n    const newValues = { ...registerInformation };\r\n    newValues[key] = value;\r\n    setRegisterInformation(newValues);\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { fullName, email, age, password, isAgreed } = registerInformation;\r\n    const newErrors = {};\r\n    if (fullName.trim() === \"\") {\r\n      newErrors.fullName = t(\"register.fullName\");\r\n    }\r\n    if (email.trim() === \"\") {\r\n      newErrors.email = t(\"register.validEmail\");\r\n    }\r\n    if (age.trim() === \"\") {\r\n      newErrors.age = t(\"register.age\");\r\n    }\r\n    if (password.trim().length < MIN_PASSWORD_LENGTH) {\r\n      newErrors.password = t(\"register.passwordCharacter\");\r\n    }\r\n    if (password.trim() === \"\") {\r\n      newErrors.password = t(\"register.enterPassword\");\r\n    }\r\n    if (!validateEmail(email)) {\r\n      newErrors.email = t(\"register.emailFormat\");\r\n    }\r\n    if (!isAgreed) {\r\n      newErrors.isAgreed = t(\"register.agreeOnterms\");\r\n    }\r\n    setErrors(errors);\r\n    const errorNameArr = Object.keys(newErrors);\r\n    if (errorNameArr.length > 0) {\r\n      return;\r\n    }\r\n    onSubmit(registerInformation);\r\n  };\r\n  const handleOkTerms = () => {\r\n    handleChange(\"isAgreed\", true);\r\n    setTermsOpen(false);\r\n  };\r\n  const handleCancelTerms = () => {\r\n    setTermsOpen(false);\r\n  };\r\n  const termsAndConditionsTranslation = [\r\n    ...t(\"register.terms\", { returnObjects: true }),\r\n  ];\r\n\r\n  return (\r\n    <form noValidate onSubmit={handleSubmit}>\r\n      <Modal\r\n        title={t(\"register.termsTitle\")}\r\n        visible={termsOpen}\r\n        onOk={handleOkTerms}\r\n        onCancel={handleCancelTerms}\r\n        footer={[\r\n          <Button key=\"back\" onClick={handleCancelTerms}>\r\n            {t(\"register.close\")}\r\n          </Button>,\r\n          <Button key=\"submit\" type=\"primary\" onClick={handleOkTerms}>\r\n            {t(\"register.iAgree\")}\r\n          </Button>,\r\n        ]}\r\n      >\r\n        <ul>\r\n          {termsAndConditionsTranslation.map((termAndCondition) => (\r\n            <li key={termAndCondition}>{termAndCondition}</li>\r\n          ))}\r\n        </ul>\r\n      </Modal>\r\n      <div className=\"loginContainer\">\r\n        <div className=\"loginContainer__loginTitle\">\r\n          {t(\"register.createAccount\")}\r\n        </div>\r\n        {error && (\r\n          <Alert className=\"authAlert\" type=\"error\" showIcon message={error} />\r\n        )}\r\n        <div className=\"loginContainer__loginDialog\">\r\n          <div className=\"loginContainer__loginDialog__inputLabel\">\r\n            {t(\"register.name\")}\r\n          </div>\r\n          <div className=\"loginContainer__loginDialog__input\">\r\n            <Input\r\n              className={createErrorClassName(errors.fullName)}\r\n              value={registerInformation.fullName}\r\n              onChange={(e) => {\r\n                handleChange(\"fullName\", e.target.value);\r\n              }}\r\n            />\r\n            <ErrorMessage message={errors.fullName} />\r\n          </div>\r\n          <div className=\"loginContainer__loginDialog__inputLabel\">\r\n            {t(\"register.enterAge\")}\r\n          </div>\r\n          <div className=\"loginContainer__loginDialog__input\">\r\n            <Input\r\n              className={createErrorClassName(errors.age)}\r\n              type=\"number\"\r\n              value={registerInformation.age}\r\n              onChange={(e) => {\r\n                handleChange(\"age\", e.target.value);\r\n              }}\r\n            />\r\n            <ErrorMessage message={errors.age} />\r\n          </div>\r\n          <div className=\"loginContainer__loginDialog__inputLabel\">\r\n            {t(\"register.email\")}\r\n          </div>\r\n          <div className=\"loginContainer__loginDialog__input\">\r\n            <Input\r\n              className={createErrorClassName(errors.email)}\r\n              value={registerInformation.email}\r\n              onChange={(e) => {\r\n                handleChange(\"email\", e.target.value);\r\n              }}\r\n            />\r\n            <ErrorMessage message={errors.email} />\r\n          </div>\r\n          <div className=\"loginContainer__loginDialog__inputLabel\">\r\n            {t(\"register.password\")}\r\n          </div>\r\n          <div className=\"loginContainer__loginDialog__input\">\r\n            <Input\r\n              className={createErrorClassName(errors.password)}\r\n              type=\"password\"\r\n              value={registerInformation.password}\r\n              onChange={(e) => {\r\n                handleChange(\"password\", e.target.value);\r\n              }}\r\n            />\r\n            <ErrorMessage message={errors.password} />\r\n          </div>\r\n          <div className=\"loginContainer__loginDialog__input\">\r\n            <Checkbox\r\n              checked={registerInformation.isAgreed}\r\n              onChange={(e) => {\r\n                handleChange(\"isAgreed\", e.target.checked);\r\n              }}\r\n            >\r\n              {t(\"register.iAgreeTo\")}\r\n              <Button\r\n                type=\"link\"\r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                  setTermsOpen(true);\r\n                }}\r\n              >\r\n                {t(\"register.termsAndConditions\")}\r\n              </Button>\r\n            </Checkbox>\r\n            <ErrorMessage message={errors.isAgreed} />\r\n          </div>\r\n          <button\r\n            type=\"submit\"\r\n            className=\"loginContainer__loginDialog__submitButton\"\r\n          >\r\n            {t(\"register.createAccount\")}\r\n          </button>\r\n          <div className=\"loginContainer__loginDialog__registerLabel\">\r\n            {t(\"register.alreadyAMember\")}\r\n          </div>\r\n          <button\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              handleLogin();\r\n            }}\r\n            type=\"button\"\r\n            className=\"loginContainer__loginDialog__registerButton\"\r\n          >\r\n            {t(\"login.login\")}\r\n          </button>\r\n          <div className=\"loginContainer__loginDialog__loginOptionsTitle\">\r\n            {t(\"login.orYouCan\")}\r\n          </div>\r\n          <button\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              handleFacebookAuth();\r\n            }}\r\n            type=\"button\"\r\n            className=\"loginContainer__loginDialog__facebookLoginBtn\"\r\n          >\r\n            {t(\"login.withFacebook\")}\r\n          </button>\r\n          <button\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              handleGoogleAuth();\r\n            }}\r\n            type=\"button\"\r\n            className=\"loginContainer__loginDialog__googleLoginBtn\"\r\n          >\r\n            {t(\"login.withGoogle\")}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\nexport default Register;\r\n","import { Alert, Input } from \"antd\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport React, { useState } from \"react\";\r\nimport { validateEmail, createErrorClassName } from \"../registerHelper\";\r\nimport ErrorMessage from \"../ErrorMessage\";\r\n\r\nconst ResetPassword = ({\r\n  // check containers/LoginRegister/index.jsx to see details of functions\r\n  onSubmit,\r\n  handleLogin,\r\n  // string\r\n  error,\r\n  // string. It is displayed when wrong data is used by user.\r\n  message,\r\n}) => {\r\n  const [t] = useTranslation();\r\n  const [passwordResetInfo, setPasswordResetInfo] = useState({ email: \"\" });\r\n  const handleChange = (key, value) => {\r\n    const newValues = { ...passwordResetInfo };\r\n    newValues[key] = value;\r\n    setPasswordResetInfo(newValues);\r\n  };\r\n  const [errors, setErrors] = useState({});\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { email } = passwordResetInfo;\r\n    const newErrors = {};\r\n    if (!validateEmail(email)) {\r\n      errors.email = t(\"passwordReset.emailFormat\");\r\n    }\r\n    setErrors(newErrors);\r\n    const errorNameArr = Object.keys(newErrors);\r\n    if (errorNameArr.length > 0) {\r\n      return;\r\n    }\r\n    onSubmit(passwordResetInfo);\r\n  };\r\n  const handleGoToLogin = () => {\r\n    handleLogin();\r\n  };\r\n\r\n  return (\r\n    <form noValidate onSubmit={handleSubmit}>\r\n      <div className=\"loginContainer\">\r\n        <div className=\"loginContainer__loginTitle\">\r\n          {t(\"passwordReset.passwordReset\")}\r\n        </div>\r\n        {error && (\r\n          <Alert className=\"authAlert\" type=\"error\" showIcon message={error} />\r\n        )}\r\n        {message}\r\n        <div className=\"loginContainer__loginDialog\">\r\n          <div className=\"loginContainer__loginDialog__inputLabel\">\r\n            {t(\"passwordReset.email\")}\r\n          </div>\r\n          <div className=\"loginContainer__loginDialog__input\">\r\n            <Input\r\n              className={createErrorClassName(errors.email)}\r\n              type=\"email\"\r\n              value={passwordResetInfo.email}\r\n              onChange={(e) => {\r\n                handleChange(\"email\", e.target.value);\r\n              }}\r\n            />\r\n            <ErrorMessage message={errors.email} />\r\n          </div>\r\n          <button\r\n            type=\"submit\"\r\n            className=\"loginContainer__loginDialog__submitButton\"\r\n          >\r\n            {t(\"passwordReset.passwordReset\")}\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              handleGoToLogin();\r\n            }}\r\n            type=\"button\"\r\n            className=\"loginContainer__loginDialog__backToLoginButton\"\r\n          >\r\n            {t(\"passwordReset.backToLogin\")}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ResetPassword;\r\n","import React, { useState } from \"react\";\r\nimport Login from \"../../components/userauth/Login\";\r\nimport Register from \"../../components/userauth/Register\";\r\nimport ResetPassword from \"../../components/userauth/ResetPassword\";\r\nimport firestore, { auth } from \"../../firebaseConfig\";\r\nimport firebase from \"firebase\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Alert, Spin } from \"antd\";\r\nimport \"./index.css\";\r\n\r\nconst LoginRegisterPage = ({ history }) => {\r\n  const [t] = useTranslation();\r\n  const [authAction, setAuthAction] = useState(\"login\");\r\n  const [error, setError] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const resetErrorAndMessage = () => {\r\n    setError(\"\");\r\n    setMessage(<></>);\r\n  };\r\n\r\n  const fetchAction = async (func) => {\r\n    resetErrorAndMessage();\r\n    try {\r\n      setLoading(true);\r\n      await func();\r\n      setLoading(() => false);\r\n      history.push(\"/\");\r\n    } catch (e) {\r\n      setLoading(() => false);\r\n      setError(e.message);\r\n    }\r\n  };\r\n\r\n  const login = async (email, password) => {\r\n    fetchAction(async () => {\r\n      await auth.signInWithEmailAndPassword(email, password);\r\n    });\r\n  };\r\n\r\n  const passwordReset = async (email) => {\r\n    fetchAction(async () => {\r\n      await auth.sendPasswordResetEmail(email);\r\n      setMessage(\r\n        <Alert\r\n          className=\"authAlert\"\r\n          showIcon\r\n          message={t(\"loginRegister.anEmailSent\", { email })}\r\n          type=\"success\"\r\n        />\r\n      );\r\n    });\r\n  };\r\n\r\n  const loginWithFacebook = async () => {\r\n    fetchAction(async () => {\r\n      const provider = new firebase.auth.FacebookAuthProvider();\r\n      provider.setCustomParameters({\r\n        display: \"popup\",\r\n      });\r\n      await auth.signInWithPopup(provider);\r\n    });\r\n  };\r\n\r\n  const loginWithGoogle = async () => {\r\n    fetchAction(async () => {\r\n      const provider = new firebase.auth.GoogleAuthProvider();\r\n      provider.addScope(\"https://www.googleapis.com/auth/contacts.readonly\");\r\n      await auth.signInWithPopup(provider);\r\n    });\r\n  };\r\n\r\n  const register = async (fullName, email, age, password) => {\r\n    fetchAction(async () => {\r\n      const registeredUser = await auth.createUserWithEmailAndPassword(\r\n        email,\r\n        password\r\n      );\r\n      await firestore.collection(\"users\").doc(registeredUser.user.uid).set({\r\n        uid: registeredUser.user.uid,\r\n        fullName,\r\n        age,\r\n      });\r\n      await auth.signInWithEmailAndPassword(email, password);\r\n    });\r\n  };\r\n\r\n  const handleLogin = () => {\r\n    resetErrorAndMessage();\r\n    setAuthAction(\"login\");\r\n  };\r\n\r\n  let component;\r\n  switch (authAction) {\r\n    case \"login\":\r\n      component = (\r\n        <Login\r\n          error={error}\r\n          message={message}\r\n          onSubmit={({ email, password }) => {\r\n            login(email, password);\r\n          }}\r\n          handleRegister={() => {\r\n            resetErrorAndMessage();\r\n            setAuthAction(\"register\");\r\n          }}\r\n          handlePasswordReset={() => {\r\n            resetErrorAndMessage();\r\n            setAuthAction(\"reset\");\r\n          }}\r\n          handleFacebookAuth={loginWithFacebook}\r\n          handleGoogleAuth={loginWithGoogle}\r\n        />\r\n      );\r\n      break;\r\n    case \"register\":\r\n      component = (\r\n        <Register\r\n          error={error}\r\n          message={message}\r\n          onSubmit={({ fullName, email, age, password }) => {\r\n            register(fullName, email, age, password);\r\n          }}\r\n          handleLogin={handleLogin}\r\n          handleFacebookAuth={loginWithFacebook}\r\n          handleGoogleAuth={loginWithGoogle}\r\n        />\r\n      );\r\n      break;\r\n    case \"reset\":\r\n      component = (\r\n        <ResetPassword\r\n          error={error}\r\n          message={message}\r\n          onSubmit={({ email }) => {\r\n            resetErrorAndMessage();\r\n            passwordReset(email);\r\n          }}\r\n          handleLogin={handleLogin}\r\n          handleFacebookAuth={loginWithFacebook}\r\n        />\r\n      );\r\n      break;\r\n    default:\r\n      throw new Error();\r\n  }\r\n\r\n  return <Spin spinning={loading}>{component}</Spin>;\r\n};\r\n\r\nexport default withRouter(LoginRegisterPage);\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Route } from \"react-router-dom\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport Footer from \"./components/Footer\";\r\nimport Home from \"./containers/Home\";\r\nimport PuzzlePage from \"./containers/PuzzlePage/index\";\r\nimport MemoryGamePage from \"./containers/MemoryGamePage\";\r\nimport GamesPage from \"./containers/GamesPage\";\r\nimport About from \"./containers/AboutPage\";\r\nimport ContactPage from \"./containers/ContactPage\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"./App.css\";\r\nimport QuizGamePage from \"./containers/QuizGamePage\";\r\nimport ResourcePage from \"./containers/ResourcesPage\";\r\nimport LoginRegisterPage from \"./containers/LoginRegister\";\r\n\r\nfunction App() {\r\n  const { i18n } = useTranslation();\r\n  document.dir = i18n.dir();\r\n  return (\r\n    <>\r\n      <Router >\r\n        <Route path=\"/\" component={Navbar} />\r\n        <Route exact path=\"/\" component={Home} />\r\n        <Route path=\"/about\" component={About} />\r\n        <Route path=\"/resources\" component={\"\"} />\r\n        <Route path=\"/contact\" component={ContactPage} />\r\n        <Route path=\"/login\" component={LoginRegisterPage} />\r\n        <Route path=\"/games/memorygame\" component={MemoryGamePage} />\r\n        <Route exact path=\"/games/puzzlegame\" component={PuzzlePage} />\r\n        <Route path=\"/games/quizgame\" component={QuizGamePage} />\r\n        <Route exact path=\"/games\" component={GamesPage} />\r\n        <Route path=\"/resources\" component={ResourcePage} />\r\n        <Route path=\"/\" component={Footer} />\r\n      </Router>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { \"Service-Worker\": \"script\" },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import i18n from \"i18next\";\r\nimport { initReactI18next } from \"react-i18next\";\r\nimport LanguageDetector from \"i18next-browser-languagedetector\";\r\nimport ar from \"./locales/ar.json\";\r\nimport en from \"./locales/en.json\";\r\nimport tr from \"./locales/tr.json\";\r\n// check react-i18next documentation to understand this file.\r\nconst resources = {\r\n  en: {\r\n    translation: en,\r\n  },\r\n  ar: {\r\n    translation: ar,\r\n  },\r\n  tr: {\r\n    translation: tr,\r\n  },\r\n};\r\ni18n\r\n  .use(LanguageDetector)\r\n  .use(initReactI18next)\r\n  .init({\r\n    resources,\r\n    fallbackLng: \"en\",\r\n    debug: true,\r\n    interpolation: {\r\n      escapeValue: false,\r\n    },\r\n  });\r\nexport default i18n;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport \"./i18n\";\r\nimport AuthProvider from \"./auth/authContext\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <AuthProvider>\r\n      <BrowserRouter>\r\n        <App />\r\n      </BrowserRouter>\r\n    </AuthProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}